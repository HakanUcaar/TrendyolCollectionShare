{"version":3,"sources":["Services/CollectionService.jsx","Redux/ReduxActions.jsx","Redux/ReduxActionContants.jsx","Components/Header.jsx","Components/Detail.jsx","Models/ItemImagesModel.jsx","Models/CollectionItemModel.jsx","TrenyolModels/CampaignModel.jsx","TrenyolModels/CategoryModel.jsx","TrenyolModels/BrandModel.jsx","TrenyolModels/MetaBrandModel.jsx","TrenyolModels/GenderModel.jsx","TrenyolModels/PricetemModel.jsx","TrenyolModels/PriceModel.jsx","TrenyolModels/MerchantModel.jsx","TrenyolModels/DeliveryInformationModel.jsx","TrenyolModels/RatingScoreModel.jsx","TrenyolModels/BreadcrumbItemModel.jsx","TrenyolModels/BreadcrumbModel.jsx","TrenyolModels/ProductModel.jsx","TrenyolModels/TrendyolModel.jsx","Components/CollectionList.jsx","Components/CollectionItemDetail.jsx","Components/CollectionList2.jsx","Components/Main.jsx","App.js","serviceWorker.js","Redux/ReduxReducer.jsx","Redux/ReduxStore.jsx","index.js","Models/CollectionModel.jsx"],"names":["getCollection","Request","a","fetch","method","headers","body","JSON","stringify","response","json","data","saveCollection","loadingCollection","payload","type","loadedCollection","updateCollection","theme","createMuiTheme","typography","h2","fontSize","breakpoints","up","Header","handleClose","setState","GeneratedLink","handleShowLink","copy","window","location","href","handleGenerateLink","console","log","props","MyCollection","collectionItem","length","enqueueSnackbar","variant","Link","CollectionLink","collectionId","getLocation","state","NewLink","classes","this","className","root","Dialog","fullWidth","maxWidth","open","onClose","aria-labelledby","DialogTitle","style","cursor","id","DialogContent","linkDialogContent","DialogContentText","gutterBottom","linkDialogQR","value","trendyolLogo","src","alt","logoAlt","Typography","collection","component","Fab","fab","color","aria-label","onClick","Component","HeaderSnack","withSnackbar","HeaderComponent","withStyles","flexGrow","maxHeight","minHeight","date","position","top","fontWeight","Image","width","objectFit","zIndex","left","right","margin","imageIcon","height","transform","fontFamily","textAlign","display","flexDirection","connect","IsFetching","IsReadCollectionData","dispatch","Todos","useStyles","dialog","marginTop","appBar","title","marginLeft","spacing","flex","newTodo","Transition","React","forwardRef","ref","Slide","direction","Detail","handleChangeEntry","e","TodoContent","target","handleAddNewEntry","handleDeleteEntry","p","preventDefault","TempTodoList","SelectedTodos","EntryIndex","map","Id","indexOf","splice","updateTodoListData","fullScreen","TransitionComponent","AppBar","Toolbar","IconButton","edge","Name","TextField","label","placeholder","InputProps","endAdornment","InputAdornment","onChange","List","labelId","ListItem","key","button","ListItemIcon","Checkbox","tabIndex","disableRipple","ListItemText","primary","Content","ListItemSecondaryAction","DetailComponent","ItemImagesModel","imageId","uuidv4","itemId","url","htmlContent","CollectionItemModel","itemName","itemDescription","price","favoriteCount","gender","totalRatingCount","averageRating","totalCommentCount","merchantName","merchantOfficialName","itemImages","CampaignModel","name","startDate","Date","endDate","isMultipleSupplied","stockTypeId","showTimer","CategoryModel","hierarchy","refundable","beautifiedName","BrandModel","isVirtual","MetaBrandModel","GenderModel","PricetemModel","text","PriceModel","profitMargin","discountedPrice","sellingPrice","originalPrice","currency","MerchantModel","officialName","cityName","taxNumber","DeliveryInformationModel","isRushDelivery","deliveryDate","RatingScoreModel","BreadcrumbItemModel","path","BreadcrumbModel","items","ProductModel","attributes","alternativeVariants","variants","otherMerchants","campaign","category","brand","showVariants","showSexualContent","metaBrand","productCode","nameWithProductCode","description","productGroupId","tax","businessUnit","images","isSellable","isBasketDiscount","hasStock","isFreeCargo","promotions","merchant","deliveryInformation","isMarketplace","productStamps","hasHtmlContent","uxLayout","isDigitalGood","isRunningOut","scheduledDelivery","ratingScore","showStarredAttributes","reviewsUrl","breadcrumb","TrendyolModel","product","user","configuration","list","li_item_tag","padding","minWidth","alignItems","lineHeight","borderRadius","gridList","flexWrap","palette","light","titleBar","background","paper","weight","slide","ImageStyle","column","flexBasis","backdrop","drawer","CollectionList","handleDetailClose","DetailOpen","handleChangeLinkText","getHTML","callback","XMLHttpRequest","xhr","onload","responseXML","responseType","send","handleAddCollectionItem","then","html","doc","DOMParser","parseFromString","JSONData","Array","from","getElementsByTagName","find","x","innerText","trim","substring","NewTrendyolModel","Object","assign","parse","TempCollection","NewItem","NewImage","CollectionId","ItemId","push","handleDeleteCollectionItem","handleOpenLink","handleOpenTodo","Backdrop","CircularProgress","Container","undefined","Item","Accordion","AccordionSummary","expandIcon","aria-controls","handleOpenMail","AccordionDetails","GridList","cols","Img","GridListTile","Divider","AccordionActions","Button","size","URL","GetDeleteButton","CollectionListComponent","CollectionItemDetail","currentItem","CollectionItemDetailComponent","lvl1","overflow","lvl2","lvl3","scrolableContainer","conteiner","cardTop","opacity","cardBottom","paddingTop","paddingBottom","cardOverlay","bottom","transition","overlayHead","justifyContent","overlayContent","cardTool","iconColor","textWhite","detailButton","border","borderColor","CollectionList2","handleDetailOpen","CurrentItem","handleCopyUrl","keyCode","onKeyDown","handleEnterKeyPress","bind","renderAddItemTextInput","Grid","container","item","sm","Paper","renderDeleteButton","Rating","readOnly","CollectionList2Snack","CollectionList2Component","Main","maxWidthXl","handleOpen","MainComponent","overflowX","CollectionServ","require","App","toggleDarkTheme","newPaletteType","handleSwitchChange","event","switchCheck","checked","readCollection","muiTheme","responsiveFontSizes","ThemeProvider","anchorOrigin","vertical","horizontal","CssBaseline","Switch","Boolean","hostname","match","initialState","CollectionModel","rootReducer","action","store","createStore","ReactDOM","render","exact","params","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.62eee84b.chunk.js","sourcesContent":["import CollectionModel from '../Models/CollectionModel';\r\n\r\nexport async function getCollection (Request){\r\n    let response = await fetch(\"https://trendyolcollectionshareapp.herokuapp.com/Collection/GetData\",\r\n    {\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify(Request)\r\n    });\r\n    \r\n    let data = await response.json();\r\n    // let NewModel = Object.assign(new CollectionModel(),data);\r\n    return data;\r\n}\r\n\r\nexport async function saveCollection(Request){\r\n    let response = await fetch(\"https://trendyolcollectionshareapp.herokuapp.com/Collection/Add\",\r\n    {\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify(Request)\r\n    });\r\n    let data = await response.json();\r\n    return data;\r\n}\r\n","import {\r\n    UPDATE_COLLECTION_DATA,\r\n    READ_COLLECTION_DATA,\r\n    SAVE_COLLECTION_DATA,\r\n    LOADING_COLLECTION_DATA,\r\n    LOADED_COLLECTION_DATA\r\n}\r\nfrom './ReduxActionContants';\r\n\r\nexport function loadingCollection(payload) {\r\n    return { type: LOADING_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function loadedCollection(payload) {\r\n    return { type: LOADED_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function updateCollection(payload) {\r\n    return { type: UPDATE_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function readCollection(payload) {\r\n    return { type: READ_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function saveCollection(payload) {\r\n    return { type: SAVE_COLLECTION_DATA, payload };\r\n};\r\n\r\n","export const UPDATE_COLLECTION_DATA = \"UPDATE_TODO_DATA\";\r\nexport const READ_COLLECTION_DATA = \"READ_TODO_DATA\";\r\nexport const SAVE_COLLECTION_DATA = \"SAVE_TODO_DATA\";\r\nexport const  LOADING_COLLECTION_DATA = \"LOADING_COLLECTION_DATA\";\r\nexport const  LOADED_COLLECTION_DATA = \"LOADED_COLLECTION_DATA\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles ,createMuiTheme} from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport copy from 'copy-to-clipboard';\r\nimport QRCode from 'qrcode.react';\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport { saveCollection, loadingCollection, loadedCollection } from \"../Redux/ReduxActions\";\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root:{\r\n        flexGrow: \"1\",\r\n        maxHeight:\"250px\",\r\n        minHeight:\"250px\"\r\n    },\r\n    date :{\r\n        position :\"absolute\",\r\n        top:\"210px\",\r\n        color : \"lightcyan\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    Image:{\r\n        maxWidth:\"100%\",\r\n        width:\"100%\",\r\n        objectFit: \"cover\",\r\n        maxHeight:\"250px\"\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        zIndex: 1,\r\n        left: 0,\r\n        right: 0,\r\n        margin: \"0 auto\",\r\n        top :\"10px\",\r\n    },\r\n    imageIcon :{\r\n        height : \"50px\",\r\n        width : \"50px\",\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n    },\r\n    trendyolLogo:{\r\n        height : \"200px\",\r\n        width : \"100%\",\r\n        //position: \"absolute\",\r\n    },\r\n    collection :{\r\n        //position :\"absolute\",\r\n        // left:\"50%\",\r\n        top:\"210px\",\r\n        fontFamily: \"source_sans_proregular\"\r\n    },\r\n    logoAlt:{\r\n        textAlign: \"center\",\r\n        top:\"210px\",\r\n    },\r\n    linkDialogContent:{\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        textAlign: \"center\",\r\n    },\r\n    linkDialogQR:{\r\n        margin: \"auto\"\r\n    }\r\n};\r\ntheme.typography.h2 = {\r\n    fontSize: '3.75rem',\r\n    '@media (min-width:600px)': {\r\n        fontSize: '2.5rem',\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n        fontSize: '3.75rem',\r\n    },\r\n};\r\n\r\nexport class Header extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            CollectionLink : \"\",\r\n            GeneratedLink : false,\r\n        }\r\n    }\r\n    \r\n    handleClose=()=>{\r\n        this.setState({GeneratedLink:false});\r\n    }\r\n\r\n    handleShowLink=()=>{\r\n        copy(window.location.href);\r\n        this.setState({GeneratedLink:true});\r\n    }\r\n\r\n    handleGenerateLink=()=>{        \r\n        console.log(this.props.MyCollection.collectionItem);\r\n        if(this.props.MyCollection.collectionItem.length === 0){\r\n            this.props.enqueueSnackbar(\"Eklenecek hiç bir veri bulunamadı. Lütfen ekledikten sonra tekrar deneyin.\", { \r\n                variant: 'warning',\r\n            });\r\n        }\r\n        else\r\n        if(this.props.Link === \"\"){\r\n            this.setState({GeneratedLink:true,CollectionLink:window.location.href+\"/\"+this.props.MyCollection.collectionId});\r\n            this.props.saveCollection();\r\n            this.props.loadedCollection();\r\n        }\r\n        else{\r\n            if(this.props.Link !== \"\"){\r\n                copy(window.location.href);\r\n                this.setState({GeneratedLink:true,CollectionLink:window.location.href});\r\n            }\r\n        }\r\n    }\r\n\r\n    getLocation=()=>{\r\n        return this.props.Link === \"\" ?  window.location.href + this.state.NewLink : window.location.href;\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Dialog\r\n                    fullWidth\r\n                    maxWidth={\"sm\"}\r\n                    open={this.state.GeneratedLink}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"max-width-dialog-title\"\r\n                >\r\n                    <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                        Koleksiyon Linkiniz\r\n                    </DialogTitle>                \r\n                    <DialogContent>\r\n                        <div className={classes.linkDialogContent}>\r\n                            <DialogContentText gutterBottom>\r\n                                {this.state.CollectionLink}\r\n                            </DialogContentText>  \r\n\r\n                            <QRCode className={classes.linkDialogQR} value={this.state.CollectionLink} />                                         \r\n                        </div>\r\n                    </DialogContent>\r\n                </Dialog>\r\n                <img className={classes.trendyolLogo}src=\"https://cdn.dsmcdn.com/web/logo/ty-logo.svg\" alt=\"https://cdn.dsmcdn.com/web/logo/ty-logo.svg\"/>    \r\n                <div className={classes.logoAlt}>\r\n                    <Typography className={classes.collection} variant=\"h2\" component=\"h1\">\r\n                        KOLEKSİYONUN\r\n                    </Typography>   \r\n                </div>  \r\n                {\r\n                    <Fab className={classes.fab} color=\"primary\" aria-label=\"add\">\r\n                        <LinkIcon  onClick={this.handleGenerateLink} />\r\n                    </Fab>\r\n                }          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        MyCollection: state.MyCollection,\r\n        Link : state.Link,\r\n        IsFetching: state.IsFetching,\r\n        IsReadCollectionData : state.IsReadCollectionData\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveCollection: Todos => dispatch(saveCollection(Todos)),\r\n        loadingCollection:Todos => dispatch(loadingCollection(Todos)),\r\n        loadedCollection:Todos => dispatch(loadedCollection(Todos)),\r\n    }\r\n}\r\n\r\nconst HeaderSnack = withSnackbar(Header);\r\nconst HeaderComponent = withStyles(useStyles)(HeaderSnack);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderComponent)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nimport { updateCollection } from \"../Redux/ReduxActions\";\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    dialog:{\r\n        marginTop : \"30px\",        \r\n    },\r\n    appBar: {\r\n      position: 'relative',\r\n    },\r\n    title: {\r\n      marginLeft: theme.spacing(2),\r\n      flex: 1,\r\n    },\r\n    newTodo: {\r\n        margin: 10\r\n    },\r\n  };\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});  \r\n\r\nexport class Detail extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            TodoContent : \"\"\r\n        }\r\n    }\r\n\r\n    handleChangeEntry=(e)=>{\r\n        this.setState({TodoContent:e.target.value});    \r\n    }\r\n\r\n    handleAddNewEntry=()=>{\r\n        // let NewTodo = new TodoModel();\r\n        // NewTodo.Content = this.state.TodoContent;\r\n        // let TempTodoList = {...this.props.SelectedTodos};\r\n        // TempTodoList.Todos.push(NewTodo);\r\n        // this.props.updateTodoListData(TempTodoList);\r\n    }\r\n\r\n    handleDeleteEntry=(e,p)=>{\r\n        e.preventDefault();\r\n        let TempTodoList = {...this.props.SelectedTodos};\r\n        let EntryIndex = TempTodoList.Todos.map((e)=> { return e.Id }).indexOf(p);\r\n        if (EntryIndex !== -1) {\r\n            TempTodoList.Todos.splice(EntryIndex, 1);\r\n            this.props.updateTodoListData(TempTodoList);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div >\r\n                <Dialog className={classes.dialog} fullScreen open={this.props.open} onClose={this.props.handleClose} TransitionComponent={Transition}>\r\n                    <AppBar className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={this.props.handleClose} aria-label=\"close\">\r\n                                <ArrowBackIosIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                {this.props.SelectedTodos != null ? this.props.SelectedTodos.Name : \"\"}\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <TextField\r\n                        className={classes.newTodo}\r\n                        id=\"filled-full-width\"\r\n                        label=\"Yeni madde\"\r\n                        placeholder=\"Yeni madde ...\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        InputProps={{\r\n                            endAdornment: \r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick={this.handleAddNewEntry}>\r\n                                    <SendIcon /> \r\n                                </IconButton>                                \r\n                            </InputAdornment>,\r\n                        }}\r\n                        onChange={(e)=>this.handleChangeEntry(e)}\r\n                    />\r\n                    <List>\r\n                        {\r\n                            this.props.SelectedTodos != null && this.props.SelectedTodos.Todos != null? \r\n                            this.props.SelectedTodos.Todos.map((value) => {\r\n                                const labelId = `checkbox-list-label-${value.Id}`;\r\n                    \r\n                                return (\r\n                                    <ListItem key={value.Id} button>\r\n                                        <ListItemIcon>\r\n                                            <Checkbox\r\n                                            edge=\"start\"\r\n                                            tabIndex={-1}\r\n                                            disableRipple\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText id={labelId} primary={value.Content} />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton onClick={(e,p)=>this.handleDeleteEntry(e,value.Id)} edge=\"end\" aria-label=\"comments\">\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                      </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                );\r\n                            }) : \"\"\r\n                        }\r\n                    </List>\r\n \r\n                </Dialog>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { MyCollection: state.MyCollection };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCollection: Todos => dispatch(updateCollection(Todos))\r\n    }\r\n}\r\n\r\nconst DetailComponent = withStyles(useStyles)(Detail);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailComponent)\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ItemImagesModel{\r\n    constructor(\r\n        imageId = uuidv4(),\r\n        itemId = \"\",\r\n        url = \"\" ,\r\n        htmlContent = \"\"\r\n    ){\r\n        this.imageId = imageId;\r\n        this.itemId = itemId;\r\n        this.url = url;\r\n        this.htmlContent = htmlContent;\r\n    }\r\n}\r\n\r\nexport default ItemImagesModel;","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass CollectionItemModel{\r\n    constructor(\r\n        itemId = uuidv4(),\r\n        collectionId = \"\",\r\n        itemName = \"\",\r\n        itemDescription = \"\",\r\n        price = 0,\r\n        url = \"\",\r\n        favoriteCount = 0,\r\n        gender = \"\",\r\n        totalRatingCount = 0,\r\n        averageRating = 0.0,\r\n        totalCommentCount = 0,\r\n        merchantName = \"\",\r\n        merchantOfficialName = \"\",\r\n        itemImages = []\r\n    ){\r\n        this.itemId = itemId;\r\n        this.collectionId = collectionId;\r\n        this.itemName = itemName;          \r\n        this.itemDescription = itemDescription;\r\n        this.price = price;\r\n        this.url = url;\r\n        this.favoriteCount = favoriteCount;\r\n        this.gender = gender;\r\n        this.totalRatingCount = totalRatingCount;\r\n        this.averageRating = averageRating;\r\n        this.totalCommentCount = totalCommentCount;\r\n        this.merchantName = merchantName;\r\n        this.merchantOfficialName = merchantOfficialName;\r\n        this.itemImages = itemImages;\r\n    }\r\n}\r\n\r\nexport default CollectionItemModel;","\r\nclass CampaignModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        startDate = new Date(),\r\n        endDate = new Date(),\r\n        isMultipleSupplied = false,\r\n        stockTypeId = 0,\r\n        url = \"\",\r\n        showTimer = false\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.startDate = startDate;\r\n        this.endDate = endDate;\r\n        this.isMultipleSupplied = isMultipleSupplied;\r\n        this.stockTypeId = stockTypeId;\r\n        this.url = url;\r\n        this.showTimer = showTimer;\r\n    }\r\n}\r\n\r\nexport default CampaignModel;","\r\nclass CategoryModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        hierarchy = \"\",\r\n        refundable = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.hierarchy = hierarchy;\r\n        this.refundable = refundable;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default CategoryModel;","\r\nclass BrandModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        isVirtual = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.isVirtual = isVirtual;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default BrandModel;","\r\nclass MetaBrandModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        isVirtual = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.isVirtual = isVirtual;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default MetaBrandModel;","\r\nclass GenderModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport default GenderModel;","\r\nclass PricetemModel{\r\n    constructor(\r\n        text = 0,\r\n        value = 0.0,\r\n    ){\r\n        this.text = text;\r\n        this.value = value;\r\n    }\r\n}\r\n\r\nexport default PricetemModel;","import PricetemModel from './PricetemModel';\r\n\r\nclass PriceModel{\r\n    constructor(\r\n        profitMargin = 0,\r\n        discountedPrice = new PricetemModel(),\r\n        sellingPrice = new PricetemModel(),\r\n        originalPrice = new PricetemModel(),\r\n        currency = \"\"\r\n    ){\r\n        this.profitMargin = profitMargin;\r\n        this.discountedPrice = discountedPrice;\r\n        this.sellingPrice = sellingPrice;\r\n        this.originalPrice = originalPrice;\r\n        this.currency = currency;\r\n    }\r\n}\r\n\r\nexport default PriceModel;","\r\nclass MerchantModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        officialName = \"\",\r\n        cityName = \"\",\r\n        taxNumber = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.officialName = officialName;\r\n        this.cityName = cityName;\r\n        this.taxNumber = taxNumber;\r\n    }\r\n}\r\n\r\nexport default MerchantModel;","\r\nclass DeliveryInformationModel{\r\n    constructor(\r\n        isRushDelivery = false,\r\n        deliveryDate = new Date(),\r\n    ){\r\n        this.isRushDelivery = isRushDelivery;\r\n        this.deliveryDate = deliveryDate;\r\n    }\r\n}\r\n\r\nexport default DeliveryInformationModel;","\r\nclass RatingScoreModel{\r\n    constructor(\r\n        averageRating = 0.0,\r\n        totalRatingCount = 0,\r\n        totalCommentCount = 0\r\n    ){\r\n        this.averageRating = averageRating;\r\n        this.totalRatingCount = totalRatingCount;\r\n        this.totalCommentCount = totalCommentCount;\r\n    }\r\n}\r\n\r\nexport default RatingScoreModel;","\r\nclass BreadcrumbItemModel{\r\n    constructor(\r\n        name = \"\",\r\n        path = \"\",\r\n        type = \"\"\r\n    ){\r\n        this.name = name;\r\n        this.path = path;\r\n        this.type = type;\r\n    }\r\n}\r\n\r\nexport default BreadcrumbItemModel;","import BreadcrumbItemModel from \"./BreadcrumbItemModel\";\r\n\r\nclass BreadcrumbModel{\r\n    constructor(\r\n        items = [BreadcrumbItemModel],\r\n    ){\r\n        this.items = items;\r\n    }\r\n}\r\n\r\nexport default BreadcrumbModel;","import CampaignModel from './CampaignModel';\r\nimport CategoryModel from './CategoryModel';\r\nimport BrandModel from './BrandModel';\r\nimport MetaBrandModel from './MetaBrandModel';\r\nimport GenderModel from './GenderModel';\r\nimport PriceModel from './PriceModel';\r\nimport MerchantModel from './MerchantModel';\r\nimport DeliveryInformationModel from './DeliveryInformationModel';\r\nimport RatingScoreModel from './RatingScoreModel';\r\nimport BreadcrumbModel from './BreadcrumbModel';\r\n\r\nclass ProductModel{\r\n    constructor(\r\n        id = 0 ,\r\n        attributes = [],\r\n        alternativeVariants = [],\r\n        variants = [],\r\n        otherMerchants = [],\r\n        campaign = new CampaignModel(),\r\n        category = new CategoryModel(),\r\n        brand = new BrandModel(),\r\n        color = \"\",\r\n        showVariants = false,\r\n        showSexualContent = false,\r\n        metaBrand = new MetaBrandModel(),\r\n        productCode = \"\",\r\n        name = \"\",\r\n        nameWithProductCode = \"\",\r\n        description = \"\",\r\n        productGroupId = 0,\r\n        tax = 0,\r\n        businessUnit = \"\",\r\n        gender = new GenderModel(),\r\n        url = \"\",\r\n        images = [],\r\n        isSellable = false,\r\n        isBasketDiscount = false,\r\n        hasStock = false,\r\n        price = new PriceModel(),\r\n        isFreeCargo = false,\r\n        promotions = [],\r\n        merchant = new MerchantModel(),\r\n        deliveryInformation = new DeliveryInformationModel(),\r\n        isMarketplace = false,        productStamps = [],\r\n        hasHtmlContent = false,\r\n        favoriteCount = 0,\r\n        uxLayout = \"\",\r\n        isDigitalGood = false,\r\n        isRunningOut = false,\r\n        scheduledDelivery = false,\r\n        ratingScore = new RatingScoreModel(),\r\n        showStarredAttributes = false,\r\n        reviewsUrl = \"\",\r\n        breadcrumb = new BreadcrumbModel()\r\n    ){\r\n        this.id = id;\r\n        this.attributes = attributes;\r\n        this.alternativeVariants = alternativeVariants;\r\n        this.variants = variants;        \r\n        this.otherMerchants = otherMerchants;\r\n        this.campaign = campaign;\r\n        this.category = category;\r\n        this.brand = brand;\r\n        this.color = color;\r\n        this.showVariants = showVariants;\r\n        this.showSexualContent = showSexualContent;\r\n        this.metaBrand = metaBrand;\r\n        this.productCode = productCode;\r\n        this.name = name;\r\n        this.nameWithProductCode = nameWithProductCode;\r\n        this.description = description;\r\n        this.productGroupId = productGroupId;\r\n        this.tax = tax;\r\n        this.businessUnit = businessUnit;\r\n        this.gender = gender;        \r\n        this.url = url;\r\n        this.images = images;\r\n        this.isSellable = isSellable;\r\n        this.isBasketDiscount = isBasketDiscount;\r\n        this.hasStock = hasStock;\r\n        this.price = price;\r\n        this.isFreeCargo = isFreeCargo;\r\n        this.promotions = promotions;\r\n        this.merchant = merchant;\r\n        this.deliveryInformation = deliveryInformation;\r\n        this.isMarketplace = isMarketplace;\r\n        this.productStamps = productStamps;         \r\n        this.hasHtmlContent = hasHtmlContent;\r\n        this.favoriteCount = favoriteCount;\r\n        this.uxLayout = uxLayout;\r\n        this.isDigitalGood = isDigitalGood;        \r\n        this.isRunningOut = isRunningOut;\r\n        this.scheduledDelivery = scheduledDelivery;\r\n        this.ratingScore = ratingScore;\r\n        this.showStarredAttributes = showStarredAttributes;\r\n        this.reviewsUrl = reviewsUrl;\r\n        this.breadcrumb = breadcrumb;                             \r\n    }\r\n}\r\n\r\nexport default ProductModel;","import ProductModel from \"./ProductModel\";\r\n\r\nclass TrendyolModel{\r\n    constructor(\r\n        product = new ProductModel(),\r\n        htmlContent = null,\r\n        user = null,\r\n        configuration = null\r\n    ){\r\n        this.product = product;\r\n        this.htmlContent = htmlContent;\r\n        this.user = user;\r\n        this.configuration = configuration;\r\n    }\r\n}\r\n\r\nexport default TrendyolModel;","import React, { Component } from 'react';\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Detail from './Detail';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { selectedTodo } from \"../Redux/ReduxActions\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AccordionActions from '@material-ui/core/AccordionActions';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Zoom from 'react-medium-image-zoom';\r\nimport 'react-medium-image-zoom/dist/styles.css';\r\n\r\nimport ItemImagesModel from '../Models/ItemImagesModel';\r\nimport CollectionItemModel from '../Models/CollectionItemModel';\r\nimport { updateCollection, saveCollection, loadingCollection, loadedCollection } from \"../Redux/ReduxActions\";\r\nimport TrendyolModel from '../TrenyolModels/TrendyolModel';\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root:{\r\n        flexGrow: \"1\",\r\n        marginTop :\"30px\"\r\n    },\r\n    list: {\r\n      width: '100%',\r\n    },\r\n    li_item_tag:{\r\n        height: \"20px\",\r\n        padding: \"4px 8px\",\r\n        fontSize: \"10px\",\r\n        minWidth: \"20px\",\r\n        alignItems: \"center\",\r\n        lineHeight: \"10px\",\r\n        borderRadius: \"2px\",\r\n        marginLeft : \"10px\"\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n        color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n        background:'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },    \r\n    paper:{\r\n        flexGrow : \"1\",\r\n        height : \"80px\",\r\n        weight : \"50px\"\r\n    },\r\n    slide:{\r\n        display: \"flex\",  \r\n        flexDirection :\"column\"      \r\n    },\r\n    ImageStyle:{\r\n        height :\"100%\",\r\n        weight:\"100%\"\r\n    },\r\n    column: {\r\n        flexBasis: '33.33%',\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n  };\r\n\r\nexport class CollectionList extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            Link : \"\",\r\n            DetailOpen : false\r\n        }\r\n    }\r\n    \r\n    handleDetailClose=()=>{\r\n        this.setState({DetailOpen:false});\r\n    }\r\n\r\n    handleChangeLinkText=(e)=>{\r\n        this.setState({Link:e.target.value});\r\n    }\r\n\r\n    getHTML = ( url, callback ) => {\r\n        const herokuHttps = \"https://cors-anywhere.herokuapp.com/\";\r\n        // Feature detection\r\n        if ( !window.XMLHttpRequest ) return;\r\n    \r\n        // Create new request\r\n        var xhr = new XMLHttpRequest();\r\n    \r\n        // Setup callback\r\n        xhr.onload = function() {\r\n            if ( callback && typeof( callback ) === 'function' ) {\r\n                callback( this.responseXML );\r\n            }\r\n        }\r\n    \r\n        // Get the HTML\r\n        xhr.open( 'GET',herokuHttps+ url );\r\n        xhr.responseType = 'document';\r\n        xhr.send();\r\n    }; \r\n\r\n    handleAddCollectionItem=async(e)=>{ \r\n        const herokuHttps = \"https://cors-anywhere.herokuapp.com/\";\r\n        \r\n        // var request = require(\"request\");\r\n        // request(herokuHttps+this.state.Link, function (error, response, body) {\r\n        //     if (!error) {\r\n        //         console.log(response);\r\n        //     } else {\r\n        //         console.log(error);\r\n        //     }\r\n        // });\r\n\r\n        this.props.loadingCollection();\r\n        await fetch(herokuHttps+this.state.Link)\r\n        .then((response)=>{\r\n            return response.text()\r\n        })\r\n        .then((html)=>{\r\n            var parser = new DOMParser();\r\n            var doc = parser.parseFromString(html, \"text/html\");   \r\n\r\n            let ScriptsArray =Array.from(doc.getElementsByTagName(\"script\"));\r\n            let JSONData = ScriptsArray.find(x=>x.innerText.indexOf(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__\")!==-1).innerText.trim().substring(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__ =\".length);\r\n            JSONData = JSONData.substring(0,JSONData.length-1);\r\n            let NewTrendyolModel = new TrendyolModel();\r\n            console.log(Object.assign(NewTrendyolModel,JSON.parse(JSONData)));\r\n            \r\n            let TempCollection = {...this.props.MyCollection};\r\n            let NewItem = new CollectionItemModel();\r\n\r\n            NewItem.itemName = NewTrendyolModel.product.productCode;\r\n            NewItem.itemDescription = NewTrendyolModel.product.name;\r\n            NewItem.url = this.state.Link;\r\n            NewItem.price = NewTrendyolModel.product.price.sellingPrice.value;\r\n            NewItem.gender = NewTrendyolModel.product.gender.name;\r\n            NewItem.favoriteCount = NewTrendyolModel.product.favoriteCount;\r\n            NewItem.totalRatingCount = NewTrendyolModel.product.ratingScore.totalRatingCount;\r\n            NewItem.totalCommentCount = NewTrendyolModel.product.ratingScore.totalCommentCount;\r\n            NewItem.averageRating = NewTrendyolModel.product.ratingScore.averageRating;\r\n            NewItem.merchantName = NewTrendyolModel.product.merchant.name;\r\n            NewItem.merchantOfficialName = NewTrendyolModel.product.merchant.officialName;\r\n\r\n            NewTrendyolModel.product.images.map((data)=>{\r\n                let NewImage = new ItemImagesModel();\r\n                NewItem.collectionId = TempCollection.CollectionId;\r\n                NewImage.itemId = NewItem.ItemId;\r\n                NewImage.url = \"https://cdn.dsmcdn.com/\"+data; \r\n                NewImage.htmlContent = \"\";\r\n                NewItem.itemImages.push(NewImage);\r\n            })\r\n\r\n            TempCollection.collectionItem.push(NewItem);\r\n            this.props.updateCollection(TempCollection);  \r\n            this.setState({Link:\"\"}); \r\n        })\r\n        this.props.loadedCollection();\r\n        \r\n         \r\n        // this.getHTML(this.state.Link,(response)=>{    \r\n        //     console.log(response);       \r\n        //     let ScriptsArray =Array.from(response.getElementsByTagName(\"script\"));\r\n        //     let JSONData = ScriptsArray.find(x=>x.innerText.indexOf(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__\")!==-1).innerText.trim().substring(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__ =\".length);\r\n        //     JSONData = JSONData.substring(0,JSONData.length-1);\r\n        //     let NewTrendyolModel = new TrendyolModel();\r\n        //     console.log(Object.assign(NewTrendyolModel,JSON.parse(JSONData)));\r\n            \r\n        //     let TempCollection = {...this.props.MyCollection};\r\n        //     let NewItem = new CollectionItemModel();\r\n\r\n        //     NewItem.itemName = NewTrendyolModel.product.productCode;\r\n        //     NewItem.itemDescription = NewTrendyolModel.product.name;\r\n        //     NewItem.url = this.state.Link;\r\n        //     NewItem.price = NewTrendyolModel.product.price.sellingPrice.value;\r\n        //     NewItem.gender = NewTrendyolModel.product.gender.name;\r\n        //     NewItem.favoriteCount = NewTrendyolModel.product.favoriteCount;\r\n        //     NewItem.totalRatingCount = NewTrendyolModel.product.ratingScore.totalRatingCount;\r\n        //     NewItem.totalCommentCount = NewTrendyolModel.product.ratingScore.totalCommentCount;\r\n        //     NewItem.averageRating = NewTrendyolModel.product.ratingScore.averageRating;\r\n        //     NewItem.merchantName = NewTrendyolModel.product.merchant.name;\r\n        //     NewItem.merchantOfficialName = NewTrendyolModel.product.merchant.officialName;\r\n\r\n        //     NewTrendyolModel.product.images.map((data)=>{\r\n        //         let NewImage = new ItemImagesModel();\r\n        //         NewItem.collectionId = TempCollection.CollectionId;\r\n        //         NewImage.itemId = NewItem.ItemId;\r\n        //         NewImage.url = \"https://cdn.dsmcdn.com/\"+data; \r\n        //         NewImage.htmlContent = \"\";\r\n        //         NewItem.itemImages.push(NewImage);\r\n        //     })\r\n\r\n        //     TempCollection.collectionItem.push(NewItem);\r\n        //     this.props.updateCollection(TempCollection);  \r\n        //     this.setState({Link:\"\"}); \r\n        // });                      \r\n        \r\n    }\r\n\r\n    handleDeleteCollectionItem=(e,p)=>{\r\n        e.preventDefault();\r\n\r\n        let TempCollection = {...this.props.MyCollection};\r\n        let EntryIndex = TempCollection.collectionItem.map((e)=> { return e.Id }).indexOf(p);\r\n        if (EntryIndex !== -1) {\r\n            TempCollection.collectionItem.splice(EntryIndex, 1);\r\n            this.props.updateCollection(TempCollection);\r\n        }\r\n    }\r\n\r\n    handleOpenLink=(e,p)=>{\r\n        e.preventDefault();\r\n        window.open(p);\r\n    }\r\n\r\n    handleOpenTodo=(e,p)=>{\r\n        e.preventDefault();\r\n        // let FilteredTodoList = this.props.TodoLists.Todolists.find((value)=>{return value.Id.match(p)});\r\n        // let TempTodos =Object.assign(new TodoListModel(),FilteredTodoList);\r\n        // if(TempTodos != null || TempTodos.length > 0){\r\n        //     this.props.selectedTodo(TempTodos);\r\n        // }\r\n        // this.setState({DetailOpen:true});\r\n    } \r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        const GetDeleteButton =(Id)=>{\r\n            if (!this.props.IsFetching && !this.props.IsReadCollectionData) {\r\n                return(\r\n                    <Button size=\"small\" color=\"secondary\" onClick={(e,p)=>this.handleDeleteCollectionItem(e,Id)}>\r\n                    Sil\r\n                    </Button>                        \r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Backdrop className={classes.backdrop} open={this.props.IsFetching}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n                <Container maxWidth=\"md\">\r\n                    <TextField\r\n                        id=\"Assinged-Hotkey-2\"\r\n                        placeholder=\"Eklenmesini istediğiniz ürünün linki ... \"\r\n                        fullWidth                        \r\n                        InputProps={{\r\n                            endAdornment: \r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick={this.handleAddCollectionItem}>\r\n                                    <AddIcon/>\r\n                                </IconButton>                                \r\n                            </InputAdornment>,\r\n                          }}\r\n                        onChange={(e)=>this.handleChangeLinkText(e)}\r\n                        value={this.state.Link}\r\n                    />   \r\n                    <List className={classes.list}>\r\n                        {\r\n                            this.props.MyCollection.collectionItem !== undefined\r\n                            && this.props.MyCollection.collectionItem != null \r\n                            && this.props.MyCollection.collectionItem.length > 0 ? \r\n                            this.props.MyCollection.collectionItem.map(Item=>{\r\n                                return (\r\n                                    <Accordion>\r\n                                        <AccordionSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-label=\"Expand\"\r\n                                            aria-controls=\"additional-actions1-content\"\r\n                                            id=\"additional-actions1-header\"\r\n                                            onClick={this.handleOpenMail}\r\n                                        >\r\n                                            <Typography>{Item.itemName}</Typography>\r\n                                            <Typography color=\"secondary\">\r\n                                                {\" — \"+Item.itemDescription}\r\n                                            </Typography>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                            <div className={classes.slide}>\r\n                                                <div>\r\n                                                    <div className={classes.column}>\r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            {Item.favoriteCount} Kişinin favorisi\r\n                                                        </Typography>  \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Satıcı Adı: {Item.merchantName}\r\n                                                        </Typography>    \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Resmi Adı: {Item.merchantOfficialName}\r\n                                                        </Typography>                                                                                                         \r\n                                                    </div>\r\n                                                    <div className={classes.column}>\r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Fiyatı : {Item.price}\r\n                                                        </Typography>  \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Toplam Değerlendirme : {Item.totalRatingCount}\r\n                                                        </Typography>      \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Toplam Yorum : {Item.totalCommentCount}\r\n                                                        </Typography>   \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            5 Üzerinden Değerlendirme  : {Item.averageRating}\r\n                                                        </Typography>                                                                                                                                                                      \r\n                                                    </div>                                                \r\n                                                </div>                                          \r\n                                                {                  \r\n                                                    <GridList className={classes.gridList} cols={2.5}>\r\n                                                        {\r\n                                                            Item.itemImages\r\n                                                            && Item.itemImages.length > 0 ?\r\n                                                            Item.itemImages.map((Img)=>{\r\n                                                                return(\r\n                                                                    <GridListTile key={Img.imageId} style={{width:\"50px\" , height:\"80px\"}}>\r\n                                                                        <Zoom>\r\n                                                                            <img\r\n                                                                                style={{width:\"100%\" , height:\"100%\"}}\r\n                                                                                alt={Img.imageId}\r\n                                                                                src={Img.url}\r\n                                                                            />\r\n                                                                        </Zoom>\r\n                                                                    </GridListTile>\r\n                                                                )\r\n                                                            }) : \"\"\r\n                                                        } \r\n                                                    </GridList>                                                                                \r\n                                                }                                        \r\n                                            </div>                                          \r\n                                        </AccordionDetails>\r\n                                        <Divider />\r\n                                        <AccordionActions>\r\n                                          <Button size=\"small\" onClick={(e,p)=>this.handleOpenLink(e,Item.URL)}>Ürüne Git</Button>\r\n                                          {\r\n                                            GetDeleteButton(Item.Id)\r\n                                          }\r\n                                        </AccordionActions>                                        \r\n                                    </Accordion>\r\n                                )\r\n                            })\r\n                            : \"\"\r\n                        }\r\n                    </List>\r\n                    <Detail open={this.state.DetailOpen} handleClose={this.handleDetailClose}></Detail>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        MyCollection: state.MyCollection,\r\n        IsFetching: state.IsFetching,\r\n        IsReadCollectionData : state.IsReadCollectionData\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCollection: Todos => dispatch(updateCollection(Todos)),\r\n        saveCollection: Todos => dispatch(saveCollection(Todos)),\r\n        loadingCollection:Todos => dispatch(loadingCollection(Todos)),\r\n        loadedCollection:Todos => dispatch(loadedCollection(Todos)),\r\n    }\r\n}\r\n\r\nconst CollectionListComponent = withStyles(useStyles)(CollectionList);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionListComponent)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { createMuiTheme,withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Zoom from 'react-medium-image-zoom';\r\nimport 'react-medium-image-zoom/dist/styles.css';\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root:{\r\n        flexGrow: \"1\",\r\n        maxHeight:\"250px\",\r\n        minHeight:\"250px\"\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        transform: 'translateZ(0)',\r\n    },\r\n};\r\n\r\nexport class CollectionItemDetail extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            open:false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth\r\n                    maxWidth={\"lg\"}\r\n                    open={this.props.open}\r\n                    onClose={this.props.handleClose}\r\n                    aria-labelledby=\"responsive-dialog-title\"\r\n                >\r\n                    <GridList className={classes.gridList} cols={2.5}>\r\n                        {\r\n                            this.props.currentItem != null ?                            \r\n                            this.props.currentItem.itemImages.map((Img)=>{\r\n                                return(\r\n                                    <GridListTile key={Img.imageId} style={{height: \"100% !important\"}}>\r\n                                        <Zoom>\r\n                                            <img\r\n                                                style={{width:\"100%\" , height:\"100%\"}}\r\n                                                alt={Img.imageId}\r\n                                                src={Img.url}\r\n                                            />\r\n                                        </Zoom>\r\n                                    </GridListTile>\r\n                                )\r\n                            }) : \"\"\r\n                        } \r\n                    </GridList>  \r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        MyCollection: state.MyCollection,\r\n        IsFetching: state.IsFetching,\r\n        IsReadCollectionData : state.IsReadCollectionData\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\n\r\nconst CollectionItemDetailComponent = withStyles(useStyles)(CollectionItemDetail);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionItemDetailComponent)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Button from '@material-ui/core/Button';\r\nimport copy from 'copy-to-clipboard';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport CollectionItemDetail from './CollectionItemDetail';\r\nimport ItemImagesModel from '../Models/ItemImagesModel';\r\nimport CollectionItemModel from '../Models/CollectionItemModel';\r\nimport { updateCollection, saveCollection, loadingCollection, loadedCollection } from \"../Redux/ReduxActions\";\r\nimport TrendyolModel from '../TrenyolModels/TrendyolModel';\r\nimport { withSnackbar } from 'notistack';\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root:{\r\n        display:\"flex\"\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    lvl1:{\r\n        // height: \"100vh\",\r\n        position:\"relative\",\r\n        overflow :\"hidden !important\",\r\n        flexGrow : \"1\",\r\n        display:\"flex\",\r\n        flexDirection:\"column\"\r\n    },\r\n    lvl2:{\r\n        position: \"relative\",\r\n        flexGrow: \"1\"\r\n    },\r\n    lvl3:{\r\n        margin: \"30px\"\r\n    },\r\n    scrolableContainer:{\r\n        height: \"100% !important\",\r\n        position: \"relative\",\r\n        flexGrow: \"1\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        overflow: \"hidden!important\"\r\n    },\r\n    conteiner:{\r\n        marginTop:\"10px\"\r\n    },\r\n    paper:{\r\n        height: \"100% !important\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    cardTop:{\r\n        textAlign: \"center\",\r\n        position: \"relative\",\r\n        '&:hover': {\r\n            '& $cardOverlay': {\r\n                opacity: 1,\r\n            }\r\n        }\r\n    },\r\n    cardBottom:{\r\n        paddingTop: \"0.5rem !important\",\r\n        paddingBottom: \"0.5rem !important\",\r\n        textAlign: \"center\"\r\n    },\r\n    Img:{\r\n        width: \"100%\",\r\n        display: \"block !important\"\r\n    },\r\n    cardOverlay:{\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        opacity: 0,\r\n        zIndex: 2,\r\n        position: \"absolute\",\r\n        background: \"rgba(0, 0, 0, 0.67)\",\r\n        transition: \"all 250ms ease-in-out\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    overlayHead:{\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between !important\",\r\n        display: \"flex\",\r\n\r\n    },\r\n    overlayContent:{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n    },\r\n    cardTool:{\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    iconColor:{\r\n        color: \"rgba(255, 255, 255, 1) !important\",\r\n        cursor: \"pointer\"\r\n    },\r\n    textWhite:{\r\n        color :\"rgba(255, 255, 255, 1) !important\"\r\n    },\r\n    detailButton:{\r\n        color :\"rgba(255, 255, 255, 1) !important\",\r\n        border: \"1px solid rgba(0, 0, 0, 0.23)\",\r\n        borderColor: \"#ffffff !important\",\r\n        padding: \"5px 15px\"\r\n    }\r\n  };\r\n\r\nexport class CollectionList2 extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            Link : \"\",\r\n            DetailOpen : false,\r\n            CurrentItem : null\r\n        }\r\n    }\r\n\r\n    handleDetailClose=()=>{\r\n        this.setState({DetailOpen:false});\r\n    }\r\n    handleDetailOpen=(e,p)=>{\r\n        this.setState({CurrentItem: p,DetailOpen:true});\r\n    }\r\n    handleChangeLinkText=(e)=>{\r\n        this.setState({Link:e.target.value});\r\n    }\r\n\r\n    handleDeleteCollectionItem=(e,p)=>{\r\n        e.preventDefault();\r\n\r\n        let TempCollection = {...this.props.MyCollection};\r\n        let EntryIndex = TempCollection.collectionItem.map((e)=> { return e.itemId }).indexOf(p);\r\n        if (EntryIndex !== -1) {\r\n            TempCollection.collectionItem.splice(EntryIndex, 1);\r\n            this.props.updateCollection(TempCollection);\r\n        }\r\n    }\r\n    handleOpenLink=(e,p)=>{\r\n        e.preventDefault();\r\n        window.open(p);\r\n    }\r\n    handleCopyUrl=(e,p)=>{\r\n        e.preventDefault();\r\n        copy(p);        \r\n    }\r\n\r\n    handleAddCollectionItem=async(e)=>{ \r\n        \r\n        this.props.loadingCollection();\r\n        try {\r\n            const herokuHttps = \"https://cors-anywhere.herokuapp.com/\";\r\n            await fetch(herokuHttps+this.state.Link)\r\n            .then((response)=>{\r\n                return response.text()\r\n            })\r\n            .then((html)=>{\r\n                var parser = new DOMParser();\r\n                var doc = parser.parseFromString(html, \"text/html\");   \r\n    \r\n                let ScriptsArray =Array.from(doc.getElementsByTagName(\"script\"));\r\n                let JSONData = ScriptsArray.find(x=>x.innerText.indexOf(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__\")!==-1).innerText.trim().substring(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__ =\".length);\r\n                JSONData = JSONData.substring(0,JSONData.length-1);\r\n                let NewTrendyolModel = new TrendyolModel();\r\n                console.log(Object.assign(NewTrendyolModel,JSON.parse(JSONData)));\r\n                \r\n                let TempCollection = {...this.props.MyCollection};\r\n                let NewItem = new CollectionItemModel();\r\n    \r\n                NewItem.itemName = NewTrendyolModel.product.productCode;\r\n                NewItem.itemDescription = NewTrendyolModel.product.name;\r\n                NewItem.url = this.state.Link;\r\n                NewItem.price = NewTrendyolModel.product.price.sellingPrice.value;\r\n                NewItem.gender = NewTrendyolModel.product.gender.name;\r\n                NewItem.favoriteCount = NewTrendyolModel.product.favoriteCount;\r\n                NewItem.totalRatingCount = NewTrendyolModel.product.ratingScore.totalRatingCount;\r\n                NewItem.totalCommentCount = NewTrendyolModel.product.ratingScore.totalCommentCount;\r\n                NewItem.averageRating = NewTrendyolModel.product.ratingScore.averageRating;\r\n                NewItem.merchantName = NewTrendyolModel.product.merchant.name;\r\n                NewItem.merchantOfficialName = NewTrendyolModel.product.merchant.officialName;\r\n    \r\n                NewTrendyolModel.product.images.map((data)=>{\r\n                    let NewImage = new ItemImagesModel();\r\n                    NewItem.collectionId = TempCollection.CollectionId;\r\n                    NewImage.itemId = NewItem.ItemId;\r\n                    NewImage.url = \"https://cdn.dsmcdn.com/\"+data; \r\n                    NewImage.htmlContent = \"\";\r\n                    NewItem.itemImages.push(NewImage);\r\n                })\r\n    \r\n                TempCollection.collectionItem.push(NewItem);\r\n                this.props.updateCollection(TempCollection);  \r\n                \r\n            })\r\n        } catch (error) {\r\n            this.props.enqueueSnackbar(\"Ekleme işleminde hata. Linkin doğru olduğundan emin olun.\",{ \r\n                variant: 'error',\r\n            });\r\n        }\r\n        finally {\r\n            this.props.loadedCollection(); \r\n            this.setState({Link:\"\"}); \r\n        }\r\n    }    \r\n\r\n    handleEnterKeyPress(e){\r\n        if(e.keyCode === 13){\r\n            this.handleAddCollectionItem(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        const renderDeleteButton =(Id)=>{\r\n            if (!this.props.IsFetching && !this.props.IsReadCollectionData) {\r\n                return(\r\n                    <DeleteIcon className={classes.iconColor} onClick={(e,p)=>this.handleDeleteCollectionItem(e,Id)}/>\r\n                )\r\n            }\r\n        }\r\n\r\n        const renderAddItemTextInput=()=>{\r\n            if (!this.props.IsFetching && !this.props.IsReadCollectionData) {\r\n                return(\r\n                    <TextField\r\n                    id=\"Assinged-Hotkey-2\"\r\n                    placeholder=\"Eklemek istediğin ürünün linkini buraya yapıştır ... \"\r\n                    fullWidth                        \r\n                    InputProps={{\r\n                        endAdornment: \r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={this.handleAddCollectionItem}>\r\n                                <AddIcon/>\r\n                            </IconButton>                                \r\n                        </InputAdornment>,\r\n                        }}\r\n                    onKeyDown={this.handleEnterKeyPress.bind(this)}\r\n                    onChange={(e)=>this.handleChangeLinkText(e)}\r\n                    value={this.state.Link}\r\n                />   \r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <Backdrop className={classes.backdrop} open={this.props.IsFetching}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>            \r\n                <CollectionItemDetail open={this.state.DetailOpen} handleClose={this.handleDetailClose} currentItem={this.state.CurrentItem}></CollectionItemDetail>\r\n                <div className={classes.root}>\r\n                    <div className={classes.lvl1}>\r\n                        <div className={classes.lvl2}>\r\n                            <div className={classes.lvl3}>                                   \r\n                                <div className={classes.scrolableContainer}>\r\n                                    {\r\n                                        renderAddItemTextInput()\r\n                                    }\r\n                                    <Grid className={classes.conteiner} container spacing={2} >\r\n                                    {\r\n                                        this.props.MyCollection.collectionItem !== undefined\r\n                                        && this.props.MyCollection.collectionItem != null \r\n                                        && this.props.MyCollection.collectionItem.length > 0 ? \r\n                                        this.props.MyCollection.collectionItem.map(Item=>{\r\n                                            return (\r\n                                                <Grid item sm={4} key={Item.itemId}>\r\n                                                    <Paper className={classes.paper}>\r\n                                                        <div className={classes.cardTop}>\r\n                                                            {\r\n                                                                Item.itemImages\r\n                                                                && Item.itemImages.length > 0 ?\r\n                                                                <img className={classes.Img} src={Item.itemImages[0].url} alt={Item.itemImages[0].imageId}></img> : \"\"                                                                  \r\n                                                            }\r\n                                                            \r\n                                                            <div className={classes.cardOverlay}>\r\n                                                                <div className={classes.overlayHead}>\r\n                                                                    <Checkbox className={classes.iconColor}></Checkbox>\r\n                                                                    <div className={classes.cardTool}>\r\n                                                                        <FilterNoneIcon className={classes.iconColor} onClick={(e,p)=>this.handleCopyUrl(e,Item.url)}/>\r\n                                                                        <EditIcon className={classes.iconColor} onClick={(e,p)=>this.handleOpenLink(e,Item.url)}/>\r\n                                                                        {\r\n                                                                            renderDeleteButton(Item.itemId)\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className={classes.overlayContent}>\r\n                                                                    <div>\r\n                                                                        <div className={classes.column}>\r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                {Item.favoriteCount} Kişinin favorisi\r\n                                                                            </Typography>  \r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                Satıcı Adı: {Item.merchantName}\r\n                                                                            </Typography>    \r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                Resmi Adı: {Item.merchantOfficialName}\r\n                                                                            </Typography>   \r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                Fiyatı : {Item.price}\r\n                                                                            </Typography>  \r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                Toplam Değerlendirme : {Item.totalRatingCount}\r\n                                                                            </Typography>      \r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                Toplam Yorum : {Item.totalCommentCount}\r\n                                                                            </Typography>   \r\n                                                                            <Rating name=\"read-only\" value={Item.averageRating} readOnly />                                                                                                                                                                                   \r\n                                                                        </div>            \r\n                                                                        <Button className={classes.detailButton} onClick={(e,p)=>this.handleDetailOpen(e,Item)}>DETAY</Button>                                 \r\n                                                                    </div>  \r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className={classes.cardBottom}>\r\n                                                            <p>{Item.itemName}</p>\r\n                                                            <small>{Item.itemDescription}</small>\r\n                                                        </div>\r\n                                                    </Paper>\r\n                                                </Grid>  \r\n                                            )\r\n                                        })\r\n                                        : \"\"\r\n                                    }                                                                                                 \r\n                                    </Grid>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        MyCollection: state.MyCollection,\r\n        IsFetching: state.IsFetching,\r\n        IsReadCollectionData : state.IsReadCollectionData\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCollection: Todos => dispatch(updateCollection(Todos)),\r\n        saveCollection: Todos => dispatch(saveCollection(Todos)),\r\n        loadingCollection:Todos => dispatch(loadingCollection(Todos)),\r\n        loadedCollection:Todos => dispatch(loadedCollection(Todos)),\r\n    }\r\n}\r\n\r\nconst CollectionList2Snack = withSnackbar(CollectionList2);\r\nconst CollectionList2Component = withStyles(useStyles)(CollectionList2Snack);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionList2Component)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Header from './Header';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport CollectionList from './CollectionList';\r\nimport CollectionList2 from './CollectionList2';\r\n\r\nconst useStyles = {\r\n    lvl1:{\r\n        display: \"flex\",\r\n        \r\n    },\r\n    lvl2:{\r\n        flexGrow: \"1\",\r\n        maxWidth: \"100%\",\r\n        overflowX: \"hidden\"\r\n    },\r\n    lvl3:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        overflow: \"hidden\",\r\n        transition: \"transform 195ms\",\r\n        minHeight: \"95vh\"\r\n    }\r\n};\r\n\r\n// <CollectionList handleOpen={this.handleDetailOpen}></CollectionList> \r\n\r\n\r\nexport class Main extends Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div className={classes.lvl1}>\r\n                <div className={classes.lvl2}>                       \r\n                    <div className={classes.lvl3}>   \r\n                        <Container maxWidthXl>\r\n                            <Header handleOpen={this.handleOpen}></Header>\r\n                            <CollectionList2 handleOpen={this.handleDetailOpen}></CollectionList2> \r\n                        </Container>\r\n                    </div>\r\n                </div>          \r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nconst MainComponent = withStyles(useStyles)(Main);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ThemeProvider  } from \"@material-ui/styles\";\r\nimport {createMuiTheme,responsiveFontSizes } from \"@material-ui/core\";\r\nimport Main from './Components/Main';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nimport { readCollection,loadingCollection,loadedCollection } from \"./Redux/ReduxActions\";\r\nimport TrendyolModel from './TrenyolModels/TrendyolModel';\r\nimport ItemImagesModel from './Models/ItemImagesModel';\r\nimport CollectionItemModel from './Models/CollectionItemModel';\r\n\r\nconst CollectionServ = require('./Services/CollectionService');\r\n\r\nexport class App extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state={\r\n      switchCheck:false,\r\n      theme : {\r\n        palette: {\r\n          type: \"light\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleDarkTheme = () => {\r\n    let newPaletteType = this.state.theme.palette.type === \"light\" ? \"dark\" : \"light\";\r\n    this.setState({\r\n      theme:{\r\n        palette: {\r\n          type: newPaletteType\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSwitchChange = (event) => {\r\n    this.toggleDarkTheme()\r\n    this.setState({switchCheck:event.target.checked});\r\n  };\r\n  \r\n  getHTML = ( url, callback ) => {\r\n\r\n    const herokuHttps = \"https://cors-anywhere.herokuapp.com/\";\r\n    // Feature detection\r\n    if ( !window.XMLHttpRequest ) return;\r\n\r\n    // Create new request\r\n    var xhr = new XMLHttpRequest();\r\n\r\n    // Setup callback\r\n    xhr.onload = function() {\r\n        if ( callback && typeof( callback ) === 'function' ) {\r\n            callback( this.responseXML );\r\n        }\r\n    }\r\n\r\n    // Get the HTML\r\n    xhr.open( 'GET',herokuHttps+ url );\r\n    xhr.responseType = 'document';\r\n    xhr.send();\r\n\r\n  };  \r\n\r\n  async componentDidMount(){\r\n    if(this.props.collectionId !== undefined && this.props.collectionId !== \"\")\r\n    {                  \r\n      let data = await CollectionServ.getCollection(this.props.collectionId);\r\n      if(data){\r\n        console.log(data);\r\n        this.props.readCollection(data);  \r\n      }     \r\n    }  \r\n    this.props.loadedCollection();\r\n  }\r\n  \r\n  render() {\r\n    const muiTheme = createMuiTheme(this.state.theme);\r\n    const theme = responsiveFontSizes(muiTheme);\r\n    if(!this.props.IsFetching) this.props.loadedCollection(); else this.props.loadingCollection()\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <SnackbarProvider\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <CssBaseline/>\r\n          <Switch\r\n            checked={this.state.switchCheck}\r\n            onChange={this.handleSwitchChange}\r\n          />          \r\n          <Main/>  \r\n        </SnackbarProvider>         \r\n      </ThemeProvider> \r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    MyCollection: state.MyCollection, \r\n    Link : state.Link,\r\n    IsFetching: state.IsFetching,\r\n    IsReadCollectionData : state.IsReadCollectionData\r\n  };  \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    readCollection: Todos => dispatch(readCollection(Todos)),\r\n    loadingCollection:Todos => dispatch(loadingCollection(Todos)),\r\n    loadedCollection:Todos => dispatch(loadedCollection(Todos)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    UPDATE_COLLECTION_DATA,\r\n    READ_COLLECTION_DATA,\r\n    SAVE_COLLECTION_DATA,\r\n    LOADING_COLLECTION_DATA,\r\n    LOADED_COLLECTION_DATA\r\n}\r\nfrom './ReduxActionContants';\r\n\r\nimport CollectionModel from '../Models/CollectionModel';\r\nconst CollectionServ = require('../Services/CollectionService');\r\n\r\nconst initialState = {\r\n    MyCollection : new CollectionModel(),\r\n    Link : \"\",\r\n    IsFetching : false,\r\n    IsReadCollectionData : false\r\n};\r\n\r\n\r\nfunction rootReducer (state = initialState, action) {\r\n    switch(action.type){\r\n        case UPDATE_COLLECTION_DATA:{\r\n            return {\r\n                ...state, MyCollection: action.payload,IsFetching:false\r\n            }\r\n        }\r\n        case READ_COLLECTION_DATA:{\r\n            return {\r\n                ...state, MyCollection: action.payload,IsReadCollectionData:true,IsFetching:false,Link:action.payload.collectionId\r\n            }         \r\n        }\r\n        case SAVE_COLLECTION_DATA:{\r\n            let data = CollectionServ.saveCollection(state.MyCollection);\r\n            console.log(data);\r\n            return {\r\n                ...state, MyCollection: new CollectionModel(),IsFetching:false,Link:\"\",IsReadCollectionData:false\r\n            }\r\n        }   \r\n        case LOADING_COLLECTION_DATA:{\r\n            return {\r\n                ...state, IsFetching: true\r\n            }\r\n        }\r\n        case LOADED_COLLECTION_DATA:{\r\n            return {\r\n                ...state, IsFetching: false\r\n            }\r\n        }        \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./ReduxReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/ReduxStore\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nconst GetCollection = ({ match }) => {\n  return <App collectionId={match.params.collectionId}></App> \n}\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}> \n    <Router>\n      <div>\n        <Route exact path=\"/TrendyolCollectionShare\" component={App} />\n        <Route exact path=\"/TrendyolCollectionShare/:collectionId\" component={GetCollection} />\n      </div>\n    </Router>        \n  </Provider>\n  , document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass CollectionModel{\r\n    constructor(\r\n        collectionId = uuidv4(),\r\n        name = \"\",\r\n        collectionItem = []\r\n    ){\r\n        this.collectionId = collectionId;\r\n        this.name = name;\r\n        this.collectionItem = collectionItem;\r\n    }\r\n}\r\n\r\nexport default CollectionModel;"],"sourceRoot":""}