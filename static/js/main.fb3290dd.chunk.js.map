{"version":3,"sources":["Services/CollectionService.jsx","Redux/ReduxActions.jsx","Redux/ReduxActionContants.jsx","Components/AddNewList.jsx","Components/Header.jsx","Components/Detail.jsx","Models/ItemImagesModel.jsx","Models/CollectionItemModel.jsx","TrenyolModels/CampaignModel.jsx","TrenyolModels/CategoryModel.jsx","TrenyolModels/BrandModel.jsx","TrenyolModels/MetaBrandModel.jsx","TrenyolModels/GenderModel.jsx","TrenyolModels/PricetemModel.jsx","TrenyolModels/PriceModel.jsx","TrenyolModels/MerchantModel.jsx","TrenyolModels/DeliveryInformationModel.jsx","TrenyolModels/RatingScoreModel.jsx","TrenyolModels/BreadcrumbItemModel.jsx","TrenyolModels/BreadcrumbModel.jsx","TrenyolModels/ProductModel.jsx","TrenyolModels/TrendyolModel.jsx","Components/CollectionList.jsx","Components/Main.jsx","App.js","serviceWorker.js","Models/CollectionModel.jsx","Redux/ReduxReducer.jsx","Redux/ReduxStore.jsx","index.js"],"names":["getCollection","Request","a","fetch","method","headers","body","JSON","stringify","response","json","data","saveCollection","updateCollection","payload","type","AddNewList","onTitleChange","e","setState","ListTitle","target","value","onHandleAdd","state","Dialog","open","this","props","onClose","handleClose","aria-labelledby","maxWidth","fullWidth","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","onChange","DialogActions","Button","onClick","color","Component","connect","MyCollection","dispatch","keyButton","Header","NewListOpen","handleOpen","classes","className","root","trendyolLogo","src","alt","Typography","collection","variant","component","Fab","fab","aria-label","HeaderComponent","withStyles","flexGrow","maxHeight","minHeight","date","position","top","fontWeight","Image","width","objectFit","left","zIndex","imageIcon","height","transform","fontFamily","Todos","useStyles","dialog","marginTop","appBar","title","marginLeft","createMuiTheme","spacing","flex","newTodo","Transition","React","forwardRef","ref","Slide","direction","Detail","handleChangeEntry","TodoContent","handleAddNewEntry","handleDeleteEntry","p","preventDefault","TempTodoList","SelectedTodos","EntryIndex","map","Id","indexOf","splice","updateTodoListData","fullScreen","TransitionComponent","AppBar","Toolbar","IconButton","edge","Name","placeholder","InputProps","endAdornment","InputAdornment","List","labelId","ListItem","key","button","ListItemIcon","Checkbox","tabIndex","disableRipple","ListItemText","primary","Content","ListItemSecondaryAction","DetailComponent","ItemImagesModel","ImageId","uuidv4","ItemId","URL","HtmlContent","CollectionItemModel","CollectionId","ItemName","ItemDescription","Price","FavoriteCount","Gender","TotalRatingCount","AverageRating","TotalCommentCount","MerchantName","MerchantOfficialName","ItemImages","CampaignModel","name","startDate","Date","endDate","isMultipleSupplied","stockTypeId","url","showTimer","CategoryModel","hierarchy","refundable","beautifiedName","BrandModel","isVirtual","MetaBrandModel","GenderModel","PricetemModel","text","PriceModel","profitMargin","discountedPrice","sellingPrice","originalPrice","currency","MerchantModel","officialName","cityName","taxNumber","DeliveryInformationModel","isRushDelivery","deliveryDate","RatingScoreModel","averageRating","totalRatingCount","totalCommentCount","BreadcrumbItemModel","path","BreadcrumbModel","items","ProductModel","attributes","alternativeVariants","variants","otherMerchants","campaign","category","brand","showVariants","showSexualContent","metaBrand","productCode","nameWithProductCode","description","productGroupId","tax","businessUnit","gender","images","isSellable","isBasketDiscount","hasStock","price","isFreeCargo","promotions","merchant","deliveryInformation","isMarketplace","productStamps","hasHtmlContent","favoriteCount","uxLayout","isDigitalGood","isRunningOut","scheduledDelivery","ratingScore","showStarredAttributes","reviewsUrl","breadcrumb","TrendyolModel","product","htmlContent","user","configuration","list","li_item_tag","padding","fontSize","minWidth","alignItems","lineHeight","borderRadius","gridList","flexWrap","palette","light","titleBar","background","paper","weight","slide","display","flexDirection","ImageStyle","column","flexBasis","CollectionList","handleDetailClose","DetailOpen","handleChangeLinkText","Link","handleAddCollectionItem","getHTML","JSONData","Array","from","getElementsByTagName","find","x","innerText","trim","substring","length","NewTrendyolModel","console","log","Object","assign","parse","TempCollection","NewItem","NewImage","push","CollectionItems","handleDeleteCollectionItem","handleOpenLink","window","handleOpenTodo","callback","XMLHttpRequest","xhr","onload","responseXML","responseType","send","Container","Item","Accordion","AccordionSummary","expandIcon","aria-controls","handleOpenMail","AccordionDetails","GridList","cols","Images","Img","GridListTile","style","Divider","AccordionActions","size","CollectionListComponent","Main","lvl1","lvl2","lvl3","handleDetailOpen","MainComponent","overflowX","overflow","transition","App","toggleDarkTheme","newPaletteType","theme","handleSwitchChange","event","switchCheck","checked","collectionId","muiTheme","ThemeProvider","CssBaseline","Switch","Boolean","location","hostname","match","CollectionsModel","CollectionServ","require","initialState","rootReducer","action","store","createStore","ReactDOM","render","exact","params","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fb3290dd.chunk.js","sourcesContent":["export async function getCollection (Request){\r\n    let response = await fetch(\"https://trendyolcollectionshareapp.herokuapp.com/Collection/Get\",\r\n    {\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify(Request)\r\n    });\r\n    let data = await response.json();\r\n    return data;\r\n}\r\n\r\nexport async function saveCollection(Request){\r\n    let response = await fetch(\"https://trendyolcollectionshareapp.herokuapp.com/Collection/Add\",\r\n    {\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify(Request)\r\n    });\r\n    let data = await response.json();\r\n    return data;\r\n}\r\n","import {\r\n    UPDATE_COLLECTION_DATA,\r\n    READ_COLLECTION_DATA,\r\n    SAVE_COLLECTION_DATA\r\n}\r\nfrom './ReduxActionContants';\r\n\r\nexport function updateCollection(payload) {\r\n    return { type: UPDATE_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function readCollection(payload) {\r\n    return { type: READ_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function saveCollection(payload) {\r\n    return { type: SAVE_COLLECTION_DATA, payload };\r\n};\r\n\r\n","export const UPDATE_COLLECTION_DATA = \"UPDATE_TODO_DATA\";\r\nexport const READ_COLLECTION_DATA = \"READ_TODO_DATA\";\r\nexport const SAVE_COLLECTION_DATA = \"SAVE_TODO_DATA\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { updateCollection } from \"../Redux/ReduxActions\";\r\n\r\nexport class AddNewList extends Component {\r\n    constructor(){\r\n        super();\r\n        \r\n        this.state={\r\n            ListTitle : \"\"\r\n        }\r\n    }\r\n\r\n    onTitleChange=(e)=>{\r\n        this.setState({ListTitle:e.target.value});\r\n    }\r\n\r\n    onHandleAdd=()=>{\r\n        // let TodoLists = {...this.props.TodoLists};\r\n        // let NewTodos = new Todos();\r\n        // NewTodos.Name = this.state.ListTitle;\r\n        // TodoLists.Todolists.push(NewTodos);\r\n        // this.props.updateTodoListData(TodoLists);\r\n        // this.props.handleClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dialog open={this.props.open} onClose={this.props.handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"lg\" fullWidth>\r\n                    <DialogTitle id=\"form-dialog-title\">Yeni Kalem</DialogTitle>\r\n                    <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Link\"\r\n                        fullWidth\r\n                        onChange={(e)=>this.onTitleChange(e)}\r\n                    />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={(e)=>this.onHandleAdd()} color=\"primary\">\r\n                        Ekle\r\n                    </Button>\r\n                    <Button onClick={this.props.handleClose} color=\"primary\">\r\n                        İptal\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state){\r\n    return { MyCollection: state.MyCollection };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCollection: keyButton => dispatch(updateCollection(keyButton))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewList)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddNewList from './AddNewList';\r\nimport { saveCollection } from \"../Redux/ReduxActions\";\r\n\r\nconst useStyles = {\r\n    root:{\r\n        flexGrow: \"1\",\r\n        maxHeight:\"250px\",\r\n        minHeight:\"250px\"\r\n    },\r\n    date :{\r\n        position :\"absolute\",\r\n        top:\"210px\",\r\n        color : \"lightcyan\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    Image:{\r\n        maxWidth:\"100%\",\r\n        width:\"100%\",\r\n        objectFit: \"cover\",\r\n        maxHeight:\"250px\"\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        top: \"220px\",\r\n        left:\"75%\",\r\n        zIndex :\"3\"\r\n    },\r\n    imageIcon :{\r\n        height : \"50px\",\r\n        width : \"50px\",\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n    },\r\n    trendyolLogo:{\r\n        height : \"200px\",\r\n        width : \"100%\",\r\n        position: \"absolute\",\r\n    },\r\n    collection :{\r\n        position :\"absolute\",\r\n        left:\"50%\",\r\n        top:\"210px\",\r\n        fontFamily: \"source_sans_proregular\"\r\n    },\r\n};\r\n\r\nexport class Header extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            NewListOpen : false,\r\n        }\r\n    }\r\n    \r\n    handleClose=()=>{\r\n        this.setState({NewListOpen:false});\r\n    }\r\n\r\n    handleOpen=()=>{\r\n        //this.setState({NewListOpen:true});\r\n        this.props.saveCollection();\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <img className={classes.trendyolLogo}src=\"https://cdn.dsmcdn.com/web/logo/ty-logo.svg\" alt=\"https://cdn.dsmcdn.com/web/logo/ty-logo.svg\"/>      \r\n                <Typography className={classes.collection} variant=\"h2\" component=\"h1\">\r\n                    KOLEKSİYONUN\r\n                </Typography>             \r\n                <Fab className={classes.fab} color=\"primary\" aria-label=\"add\">\r\n                    <LinkIcon  onClick={this.handleOpen} />\r\n                </Fab> \r\n                <AddNewList open={this.state.NewListOpen} handleClose={this.handleClose}></AddNewList> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveCollection: Todos => dispatch(saveCollection(Todos))\r\n    }\r\n}\r\n\r\nconst HeaderComponent = withStyles(useStyles)(Header);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderComponent)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nimport { updateCollection } from \"../Redux/ReduxActions\";\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    dialog:{\r\n        marginTop : \"30px\",        \r\n    },\r\n    appBar: {\r\n      position: 'relative',\r\n    },\r\n    title: {\r\n      marginLeft: theme.spacing(2),\r\n      flex: 1,\r\n    },\r\n    newTodo: {\r\n        margin: 10\r\n    },\r\n  };\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});  \r\n\r\nexport class Detail extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            TodoContent : \"\"\r\n        }\r\n    }\r\n\r\n    handleChangeEntry=(e)=>{\r\n        this.setState({TodoContent:e.target.value});    \r\n    }\r\n\r\n    handleAddNewEntry=()=>{\r\n        // let NewTodo = new TodoModel();\r\n        // NewTodo.Content = this.state.TodoContent;\r\n        // let TempTodoList = {...this.props.SelectedTodos};\r\n        // TempTodoList.Todos.push(NewTodo);\r\n        // this.props.updateTodoListData(TempTodoList);\r\n    }\r\n\r\n    handleDeleteEntry=(e,p)=>{\r\n        e.preventDefault();\r\n        let TempTodoList = {...this.props.SelectedTodos};\r\n        let EntryIndex = TempTodoList.Todos.map((e)=> { return e.Id }).indexOf(p);\r\n        if (EntryIndex !== -1) {\r\n            TempTodoList.Todos.splice(EntryIndex, 1);\r\n            this.props.updateTodoListData(TempTodoList);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div >\r\n                <Dialog className={classes.dialog} fullScreen open={this.props.open} onClose={this.props.handleClose} TransitionComponent={Transition}>\r\n                    <AppBar className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={this.props.handleClose} aria-label=\"close\">\r\n                                <ArrowBackIosIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                {this.props.SelectedTodos != null ? this.props.SelectedTodos.Name : \"\"}\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <TextField\r\n                        className={classes.newTodo}\r\n                        id=\"filled-full-width\"\r\n                        label=\"Yeni madde\"\r\n                        placeholder=\"Yeni madde ...\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        InputProps={{\r\n                            endAdornment: \r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick={this.handleAddNewEntry}>\r\n                                    <SendIcon /> \r\n                                </IconButton>                                \r\n                            </InputAdornment>,\r\n                        }}\r\n                        onChange={(e)=>this.handleChangeEntry(e)}\r\n                    />\r\n                    <List>\r\n                        {\r\n                            this.props.SelectedTodos != null && this.props.SelectedTodos.Todos != null? \r\n                            this.props.SelectedTodos.Todos.map((value) => {\r\n                                const labelId = `checkbox-list-label-${value.Id}`;\r\n                    \r\n                                return (\r\n                                    <ListItem key={value.Id} button>\r\n                                        <ListItemIcon>\r\n                                            <Checkbox\r\n                                            edge=\"start\"\r\n                                            tabIndex={-1}\r\n                                            disableRipple\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText id={labelId} primary={value.Content} />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton onClick={(e,p)=>this.handleDeleteEntry(e,value.Id)} edge=\"end\" aria-label=\"comments\">\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                      </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                );\r\n                            }) : \"\"\r\n                        }\r\n                    </List>\r\n \r\n                </Dialog>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { MyCollection: state.MyCollection };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCollection: Todos => dispatch(updateCollection(Todos))\r\n    }\r\n}\r\n\r\nconst DetailComponent = withStyles(useStyles)(Detail);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailComponent)\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ItemImagesModel{\r\n    constructor(\r\n        ImageId = uuidv4(),\r\n        ItemId = \"\",\r\n        URL = \"\" ,\r\n        HtmlContent = \"\"\r\n    ){\r\n        this.ImageId = ImageId;\r\n        this.ItemId = ItemId;\r\n        this.URL = URL;\r\n        this.HtmlContent = HtmlContent;\r\n    }\r\n}\r\n\r\nexport default ItemImagesModel;","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass CollectionItemModel{\r\n    constructor(\r\n        ItemId = uuidv4(),\r\n        CollectionId = \"\",\r\n        ItemName = \"\",\r\n        ItemDescription = \"\",\r\n        Price = 0,\r\n        URL = \"\",\r\n        FavoriteCount = 0,\r\n        Gender = \"\",\r\n        TotalRatingCount = 0,\r\n        AverageRating = 0.0,\r\n        TotalCommentCount = 0,\r\n        MerchantName = \"\",\r\n        MerchantOfficialName = \"\",\r\n        ItemImages = []\r\n    ){\r\n        this.ItemId = ItemId;\r\n        this.CollectionId = CollectionId;\r\n        this.ItemImages = ItemImages;\r\n        this.ItemName = ItemName;\r\n        this.ItemDescription = ItemDescription;\r\n        this.Price = Price;\r\n        this.URL = URL;\r\n        this.FavoriteCount = FavoriteCount;\r\n        this.Gender = Gender;\r\n        this.TotalRatingCount = TotalRatingCount;\r\n        this.AverageRating = AverageRating;\r\n        this.TotalCommentCount = TotalCommentCount;\r\n        this.MerchantName = MerchantName;\r\n        this.MerchantOfficialName = MerchantOfficialName;\r\n    }\r\n}\r\n\r\nexport default CollectionItemModel;","\r\nclass CampaignModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        startDate = new Date(),\r\n        endDate = new Date(),\r\n        isMultipleSupplied = false,\r\n        stockTypeId = 0,\r\n        url = \"\",\r\n        showTimer = false\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.startDate = startDate;\r\n        this.endDate = endDate;\r\n        this.isMultipleSupplied = isMultipleSupplied;\r\n        this.stockTypeId = stockTypeId;\r\n        this.url = url;\r\n        this.showTimer = showTimer;\r\n    }\r\n}\r\n\r\nexport default CampaignModel;","\r\nclass CategoryModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        hierarchy = \"\",\r\n        refundable = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.hierarchy = hierarchy;\r\n        this.refundable = refundable;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default CategoryModel;","\r\nclass BrandModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        isVirtual = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.isVirtual = isVirtual;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default BrandModel;","\r\nclass MetaBrandModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        isVirtual = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.isVirtual = isVirtual;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default MetaBrandModel;","\r\nclass GenderModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport default GenderModel;","\r\nclass PricetemModel{\r\n    constructor(\r\n        text = 0,\r\n        value = 0.0,\r\n    ){\r\n        this.text = text;\r\n        this.value = value;\r\n    }\r\n}\r\n\r\nexport default PricetemModel;","import PricetemModel from './PricetemModel';\r\n\r\nclass PriceModel{\r\n    constructor(\r\n        profitMargin = 0,\r\n        discountedPrice = new PricetemModel(),\r\n        sellingPrice = new PricetemModel(),\r\n        originalPrice = new PricetemModel(),\r\n        currency = \"\"\r\n    ){\r\n        this.profitMargin = profitMargin;\r\n        this.discountedPrice = discountedPrice;\r\n        this.sellingPrice = sellingPrice;\r\n        this.originalPrice = originalPrice;\r\n        this.currency = currency;\r\n    }\r\n}\r\n\r\nexport default PriceModel;","\r\nclass MerchantModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        officialName = \"\",\r\n        cityName = \"\",\r\n        taxNumber = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.officialName = officialName;\r\n        this.cityName = cityName;\r\n        this.taxNumber = taxNumber;\r\n    }\r\n}\r\n\r\nexport default MerchantModel;","\r\nclass DeliveryInformationModel{\r\n    constructor(\r\n        isRushDelivery = false,\r\n        deliveryDate = new Date(),\r\n    ){\r\n        this.isRushDelivery = isRushDelivery;\r\n        this.deliveryDate = deliveryDate;\r\n    }\r\n}\r\n\r\nexport default DeliveryInformationModel;","\r\nclass RatingScoreModel{\r\n    constructor(\r\n        averageRating = 0.0,\r\n        totalRatingCount = 0,\r\n        totalCommentCount = 0\r\n    ){\r\n        this.averageRating = averageRating;\r\n        this.totalRatingCount = totalRatingCount;\r\n        this.totalCommentCount = totalCommentCount;\r\n    }\r\n}\r\n\r\nexport default RatingScoreModel;","\r\nclass BreadcrumbItemModel{\r\n    constructor(\r\n        name = \"\",\r\n        path = \"\",\r\n        type = \"\"\r\n    ){\r\n        this.name = name;\r\n        this.path = path;\r\n        this.type = type;\r\n    }\r\n}\r\n\r\nexport default BreadcrumbItemModel;","import BreadcrumbItemModel from \"./BreadcrumbItemModel\";\r\n\r\nclass BreadcrumbModel{\r\n    constructor(\r\n        items = [BreadcrumbItemModel],\r\n    ){\r\n        this.items = items;\r\n    }\r\n}\r\n\r\nexport default BreadcrumbModel;","import CampaignModel from './CampaignModel';\r\nimport CategoryModel from './CategoryModel';\r\nimport BrandModel from './BrandModel';\r\nimport MetaBrandModel from './MetaBrandModel';\r\nimport GenderModel from './GenderModel';\r\nimport PriceModel from './PriceModel';\r\nimport MerchantModel from './MerchantModel';\r\nimport DeliveryInformationModel from './DeliveryInformationModel';\r\nimport RatingScoreModel from './RatingScoreModel';\r\nimport BreadcrumbModel from './BreadcrumbModel';\r\n\r\nclass ProductModel{\r\n    constructor(\r\n        id = 0 ,\r\n        attributes = [],\r\n        alternativeVariants = [],\r\n        variants = [],\r\n        otherMerchants = [],\r\n        campaign = new CampaignModel(),\r\n        category = new CategoryModel(),\r\n        brand = new BrandModel(),\r\n        color = \"\",\r\n        showVariants = false,\r\n        showSexualContent = false,\r\n        metaBrand = new MetaBrandModel(),\r\n        productCode = \"\",\r\n        name = \"\",\r\n        nameWithProductCode = \"\",\r\n        description = \"\",\r\n        productGroupId = 0,\r\n        tax = 0,\r\n        businessUnit = \"\",\r\n        gender = new GenderModel(),\r\n        url = \"\",\r\n        images = [],\r\n        isSellable = false,\r\n        isBasketDiscount = false,\r\n        hasStock = false,\r\n        price = new PriceModel(),\r\n        isFreeCargo = false,\r\n        promotions = [],\r\n        merchant = new MerchantModel(),\r\n        deliveryInformation = new DeliveryInformationModel(),\r\n        isMarketplace = false,        productStamps = [],\r\n        hasHtmlContent = false,\r\n        favoriteCount = 0,\r\n        uxLayout = \"\",\r\n        isDigitalGood = false,\r\n        isRunningOut = false,\r\n        scheduledDelivery = false,\r\n        ratingScore = new RatingScoreModel(),\r\n        showStarredAttributes = false,\r\n        reviewsUrl = \"\",\r\n        breadcrumb = new BreadcrumbModel()\r\n    ){\r\n        this.id = id;\r\n        this.attributes = attributes;\r\n        this.alternativeVariants = alternativeVariants;\r\n        this.variants = variants;        \r\n        this.otherMerchants = otherMerchants;\r\n        this.campaign = campaign;\r\n        this.category = category;\r\n        this.brand = brand;\r\n        this.color = color;\r\n        this.showVariants = showVariants;\r\n        this.showSexualContent = showSexualContent;\r\n        this.metaBrand = metaBrand;\r\n        this.productCode = productCode;\r\n        this.name = name;\r\n        this.nameWithProductCode = nameWithProductCode;\r\n        this.description = description;\r\n        this.productGroupId = productGroupId;\r\n        this.tax = tax;\r\n        this.businessUnit = businessUnit;\r\n        this.gender = gender;        \r\n        this.url = url;\r\n        this.images = images;\r\n        this.isSellable = isSellable;\r\n        this.isBasketDiscount = isBasketDiscount;\r\n        this.hasStock = hasStock;\r\n        this.price = price;\r\n        this.isFreeCargo = isFreeCargo;\r\n        this.promotions = promotions;\r\n        this.merchant = merchant;\r\n        this.deliveryInformation = deliveryInformation;\r\n        this.isMarketplace = isMarketplace;\r\n        this.productStamps = productStamps;         \r\n        this.hasHtmlContent = hasHtmlContent;\r\n        this.favoriteCount = favoriteCount;\r\n        this.uxLayout = uxLayout;\r\n        this.isDigitalGood = isDigitalGood;        \r\n        this.isRunningOut = isRunningOut;\r\n        this.scheduledDelivery = scheduledDelivery;\r\n        this.ratingScore = ratingScore;\r\n        this.showStarredAttributes = showStarredAttributes;\r\n        this.reviewsUrl = reviewsUrl;\r\n        this.breadcrumb = breadcrumb;                             \r\n    }\r\n}\r\n\r\nexport default ProductModel;","import ProductModel from \"./ProductModel\";\r\n\r\nclass TrendyolModel{\r\n    constructor(\r\n        product = new ProductModel(),\r\n        htmlContent = null,\r\n        user = null,\r\n        configuration = null\r\n    ){\r\n        this.product = product;\r\n        this.htmlContent = htmlContent;\r\n        this.user = user;\r\n        this.configuration = configuration;\r\n    }\r\n}\r\n\r\nexport default TrendyolModel;","import React, { Component } from 'react';\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Detail from './Detail';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { selectedTodo } from \"../Redux/ReduxActions\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AccordionActions from '@material-ui/core/AccordionActions';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Zoom from 'react-medium-image-zoom';\r\nimport 'react-medium-image-zoom/dist/styles.css';\r\n\r\nimport ItemImagesModel from '../Models/ItemImagesModel';\r\nimport CollectionItemModel from '../Models/CollectionItemModel';\r\nimport { updateCollection, saveCollection } from \"../Redux/ReduxActions\";\r\n\r\nimport TrendyolModel from '../TrenyolModels/TrendyolModel';\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root:{\r\n        flexGrow: \"1\",\r\n        marginTop :\"30px\"\r\n    },\r\n    list: {\r\n      width: '100%',\r\n    },\r\n    li_item_tag:{\r\n        height: \"20px\",\r\n        padding: \"4px 8px\",\r\n        fontSize: \"10px\",\r\n        minWidth: \"20px\",\r\n        alignItems: \"center\",\r\n        lineHeight: \"10px\",\r\n        borderRadius: \"2px\",\r\n        marginLeft : \"10px\"\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n        color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n        background:'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },    \r\n    paper:{\r\n        flexGrow : \"1\",\r\n        height : \"80px\",\r\n        weight : \"50px\"\r\n    },\r\n    slide:{\r\n        display: \"flex\",  \r\n        flexDirection :\"column\"      \r\n    },\r\n    ImageStyle:{\r\n        height :\"100%\",\r\n        weight:\"100%\"\r\n    },\r\n    column: {\r\n        flexBasis: '33.33%',\r\n    },\r\n  };\r\n\r\nexport class CollectionList extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            Link : \"\",\r\n            DetailOpen : false\r\n        }\r\n    }\r\n\r\n    \r\n    handleDetailClose=()=>{\r\n        this.setState({DetailOpen:false});\r\n    }\r\n\r\n    handleChangeLinkText=(e)=>{\r\n        this.setState({Link:e.target.value});\r\n    }\r\n    handleAddCollectionItem=(e)=>{\r\n        const herokuHttps = \"https://cors-anywhere.herokuapp.com/\";\r\n        \r\n        // const request = require('request');\r\n        // request(herokuHttps+this.state.Link, function (error, response, body) {\r\n        //   console.error('error:', error); // Print the error if one occurred\r\n        //   console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\r\n        //   console.log('body:', body); // Print the HTML for the Google homepage.\r\n        // });\r\n\r\n        \r\n        // var quizUrl = herokuHttps+this.state.Link;\r\n        // fetch(quizUrl).then(function(response) {\r\n        //     return response.text()\r\n        // })\r\n        // .then((text)=>{\r\n        //     console.log(text);\r\n        //     let response = document.createElement('html');\r\n        //     response.innerHTML = text;\r\n\r\n        //     let TempCollection = {...this.props.MyCollection};\r\n        //     let NewItem = new CollectionItemModel();\r\n        //     let ItemElement = Array.from(response.getElementsByTagName(\"h1\"))[0];\r\n\r\n        //     NewItem.ItemName = ItemElement.firstElementChild.innerText;\r\n        //     NewItem.ItemDescription = ItemElement.innerText;\r\n        //     NewItem.URL = this.state.Link;\r\n        //     NewItem.Price = 523.23;\r\n\r\n        //     // let Images = Array.from(response.images);\r\n        //     // console.log(Images);\r\n        //     // Promise.all(Images.map((data)=>{\r\n        //     //     console.log(data);\r\n        //     //     if(data.alt === \"gallery image\"){\r\n        //     //         let NewImage = new ItemImagesModel();\r\n        //     //         let Dom =  document.createElement( 'html' );\r\n        //     //         Dom.innerHTML = data.outerHTML;\r\n        //     //         NewImage.URL = Dom.getElementsByTagName(\"img\")[0].getAttribute('lazy'); \r\n        //     //         NewImage.HtmlContent = data.outerHTML;\r\n        //     //         NewItem.Images.push(NewImage);\r\n        //     //     }\r\n        //     // }));\r\n\r\n        //     // TempCollection.CollectionItems.push(NewItem);\r\n        //     // this.props.updateCollection(TempCollection);            \r\n        //     this.setState({Link:\"\"});            \r\n        // })\r\n        // .catch(function(err) {\r\n        //     console.log(err) // this won't trigger because there is no actual error\r\n        // });\r\n\r\n        this.getHTML(this.state.Link,(response)=>{\r\n            let ScriptsArray =Array.from(response.getElementsByTagName(\"script\"));\r\n            let JSONData = ScriptsArray.find(x=>x.innerText.indexOf(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__\")!==-1).innerText.trim().substring(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__ =\".length);\r\n            JSONData = JSONData.substring(0,JSONData.length-1);\r\n            let NewTrendyolModel = new TrendyolModel();\r\n            console.log(Object.assign(NewTrendyolModel,JSON.parse(JSONData)));\r\n            \r\n            let TempCollection = {...this.props.MyCollection};\r\n            let NewItem = new CollectionItemModel();\r\n\r\n            NewItem.ItemName = NewTrendyolModel.product.productCode;\r\n            NewItem.ItemDescription = NewTrendyolModel.product.name;\r\n            NewItem.URL = this.state.Link;\r\n            NewItem.Price = NewTrendyolModel.product.price.sellingPrice.value;\r\n            NewItem.Gender = NewTrendyolModel.product.gender.name;\r\n            NewItem.FavoriteCount = NewTrendyolModel.product.favoriteCount;\r\n            NewItem.TotalRatingCount = NewTrendyolModel.product.ratingScore.totalRatingCount;\r\n            NewItem.TotalCommentCount = NewTrendyolModel.product.ratingScore.totalCommentCount;\r\n            NewItem.AverageRating = NewTrendyolModel.product.ratingScore.averageRating;\r\n            NewItem.MerchantName = NewTrendyolModel.product.merchant.name;\r\n            NewItem.MerchantOfficialName = NewTrendyolModel.product.merchant.officialName;\r\n\r\n            NewTrendyolModel.product.images.map((data)=>{\r\n                let NewImage = new ItemImagesModel();\r\n                NewItem.CollectionId = TempCollection.CollectionId;\r\n                NewImage.ItemId = NewItem.ItemId;\r\n                NewImage.URL = \"https://cdn.dsmcdn.com/\"+data; \r\n                NewImage.HtmlContent = \"\";\r\n                NewItem.ItemImages.push(NewImage);\r\n            })\r\n\r\n            TempCollection.CollectionItems.push(NewItem);\r\n            this.props.updateCollection(TempCollection);            \r\n            this.setState({Link:\"\"});\r\n        });\r\n    }\r\n\r\n    handleDeleteCollectionItem=(e,p)=>{\r\n        e.preventDefault();\r\n\r\n        let TempCollection = {...this.props.MyCollection};\r\n        let EntryIndex = TempCollection.CollectionItems.map((e)=> { return e.Id }).indexOf(p);\r\n        if (EntryIndex !== -1) {\r\n            TempCollection.CollectionItems.splice(EntryIndex, 1);\r\n            this.props.updateCollection(TempCollection);\r\n        }\r\n    }\r\n\r\n    handleOpenLink=(e,p)=>{\r\n        e.preventDefault();\r\n        window.open(p);\r\n    }\r\n\r\n    handleOpenTodo=(e,p)=>{\r\n        e.preventDefault();\r\n        // let FilteredTodoList = this.props.TodoLists.Todolists.find((value)=>{return value.Id.match(p)});\r\n        // let TempTodos =Object.assign(new TodoListModel(),FilteredTodoList);\r\n        // if(TempTodos != null || TempTodos.length > 0){\r\n        //     this.props.selectedTodo(TempTodos);\r\n        // }\r\n        // this.setState({DetailOpen:true});\r\n    }\r\n\r\n    getHTML = ( url, callback ) => {\r\n\r\n        const herokuHttps = \"https://cors-anywhere.herokuapp.com/\";\r\n        // Feature detection\r\n        if ( !window.XMLHttpRequest ) return;\r\n    \r\n        // Create new request\r\n        var xhr = new XMLHttpRequest();\r\n    \r\n        // Setup callback\r\n        xhr.onload = function() {\r\n            if ( callback && typeof( callback ) === 'function' ) {\r\n                callback( this.responseXML );\r\n            }\r\n        }\r\n    \r\n        // Get the HTML\r\n        xhr.open( 'GET',herokuHttps+ url );\r\n        xhr.responseType = 'document';\r\n        xhr.send();\r\n    \r\n    };    \r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Container maxWidth=\"md\">\r\n                    <TextField\r\n                        id=\"Assinged-Hotkey-2\"\r\n                        placeholder=\"Eklenmesini istediğiniz ürünün linki ... \"\r\n                        fullWidth                        \r\n                        InputProps={{\r\n                            endAdornment: \r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick={this.handleAddCollectionItem}>\r\n                                    <AddIcon/>\r\n                                </IconButton>                                \r\n                            </InputAdornment>,\r\n                          }}\r\n                        onChange={(e)=>this.handleChangeLinkText(e)}\r\n                        value={this.state.Link}\r\n                    />   \r\n                    <List className={classes.list}>\r\n                        {\r\n                            this.props.MyCollection.CollectionItems != null ? \r\n                            this.props.MyCollection.CollectionItems.map(Item=>{\r\n                                return (\r\n                                    <Accordion>\r\n                                        <AccordionSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-label=\"Expand\"\r\n                                            aria-controls=\"additional-actions1-content\"\r\n                                            id=\"additional-actions1-header\"\r\n                                            onClick={this.handleOpenMail}\r\n                                        >\r\n                                            <Typography>{Item.ItemName}</Typography>\r\n                                            <Typography color=\"secondary\">\r\n                                                {\" — \"+Item.ItemDescription}\r\n                                            </Typography>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                            <div className={classes.slide}>\r\n                                                <div>\r\n                                                    <div className={classes.column}>\r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            {Item.FavoriteCount} Kişinin favorisi\r\n                                                        </Typography>  \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Satıcı Adı: {Item.MerchantName}\r\n                                                        </Typography>    \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Resmi Adı: {Item.MerchantOfficialName}\r\n                                                        </Typography>                                                                                                         \r\n                                                    </div>\r\n                                                    <div className={classes.column}>\r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Fiyatı : {Item.Price}\r\n                                                        </Typography>  \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Toplam Değerlendirme : {Item.TotalRatingCount}\r\n                                                        </Typography>      \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Toplam Yorum : {Item.TotalCommentCount}\r\n                                                        </Typography>   \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            5 Üzerinden Değerlendirme  : {Item.AverageRating}\r\n                                                        </Typography>                                                                                                                                                                      \r\n                                                    </div>                                                \r\n                                                </div>                                          \r\n                                                {                  \r\n                                                    <GridList className={classes.gridList} cols={2.5}>\r\n                                                        {Item.Images.map((Img)=>{\r\n                                                            return(\r\n                                                            <GridListTile key={Img.Id} style={{width:\"50px\" , height:\"80px\"}}>\r\n                                                                <Zoom>\r\n                                                                    <img\r\n                                                                        style={{width:\"100%\" , height:\"100%\"}}\r\n                                                                        alt={Img.Id}\r\n                                                                        src={Img.URL}\r\n                                                                    />\r\n                                                                </Zoom>\r\n\r\n                                                            </GridListTile>)\r\n                                                        })}\r\n                                                    </GridList>                                                                                \r\n                                                }                                        \r\n                                            </div>                                          \r\n                                        </AccordionDetails>\r\n                                        <Divider />\r\n                                        <AccordionActions>\r\n                                          <Button size=\"small\" onClick={(e,p)=>this.handleOpenLink(e,Item.URL)}>Ürüne Git</Button>\r\n                                          <Button size=\"small\" color=\"secondary\" onClick={(e,p)=>this.handleDeleteCollectionItem(e,Item.Id)}>\r\n                                            Sil\r\n                                          </Button>\r\n                                        </AccordionActions>                                        \r\n                                    </Accordion>\r\n                                )\r\n                            })\r\n                            : \"\"\r\n                        }\r\n                    </List>\r\n                    <Detail open={this.state.DetailOpen} handleClose={this.handleDetailClose}></Detail>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { MyCollection: state.MyCollection };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCollection: Todos => dispatch(updateCollection(Todos)),\r\n        saveCollection: Todos => dispatch(saveCollection(Todos))\r\n    }\r\n}\r\n\r\nconst CollectionListComponent = withStyles(useStyles)(CollectionList);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionListComponent)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Header from './Header';\r\nimport CollectionList from './CollectionList';\r\n\r\nconst useStyles = {\r\n    lvl1:{\r\n        display: \"flex\",\r\n        \r\n    },\r\n    lvl2:{\r\n        flexGrow: \"1\",\r\n        maxWidth: \"100%\",\r\n        overflowX: \"hidden\"\r\n    },\r\n    lvl3:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        overflow: \"hidden\",\r\n        transition: \"transform 195ms\",\r\n        minHeight: \"95vh\"\r\n    }\r\n};\r\n\r\nexport class Main extends Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div className={classes.lvl1}>\r\n                <div className={classes.lvl2}>                       \r\n                    <div className={classes.lvl3}>                            \r\n                        <Header handleOpen={this.handleOpen}></Header>\r\n                        <CollectionList handleOpen={this.handleDetailOpen}></CollectionList>                        \r\n                    </div>\r\n                </div>          \r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nconst MainComponent = withStyles(useStyles)(Main);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport {createMuiTheme} from \"@material-ui/core\";\r\nimport Main from './Components/Main';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport class App extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state={\r\n      switchCheck:false,\r\n      theme : {\r\n        palette: {\r\n          type: \"light\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleDarkTheme = () => {\r\n    let newPaletteType = this.state.theme.palette.type === \"light\" ? \"dark\" : \"light\";\r\n    this.setState({\r\n      theme:{\r\n        palette: {\r\n          type: newPaletteType\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSwitchChange = (event) => {\r\n    this.toggleDarkTheme()\r\n    this.setState({switchCheck:event.target.checked});\r\n  };\r\n\r\n  componentDidMount(){\r\n    console.log(this.props.collectionId);\r\n  }\r\n  \r\n  render() {\r\n    const muiTheme = createMuiTheme(this.state.theme);\r\n\r\n    return (\r\n      <ThemeProvider theme={muiTheme}>\r\n        <CssBaseline/>\r\n        <Switch\r\n          checked={this.state.switchCheck}\r\n          onChange={this.handleSwitchChange}\r\n        />\r\n        <Main/> \r\n      </ThemeProvider> \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass CollectionsModel{\r\n    constructor(\r\n        CollectionId = uuidv4(),\r\n        CollectionItems = []\r\n    ){\r\n        this.CollectionId = CollectionId;\r\n        this.CollectionItems = CollectionItems;\r\n    }\r\n}\r\n\r\nexport default CollectionsModel;","import {\r\n    UPDATE_COLLECTION_DATA,\r\n    READ_COLLECTION_DATA,\r\n    SAVE_COLLECTION_DATA\r\n}\r\nfrom './ReduxActionContants';\r\n\r\nimport CollectionsModel from '../Models/CollectionModel';\r\nconst CollectionServ = require('../Services/CollectionService');\r\n\r\nconst initialState = {\r\n    MyCollection : new CollectionsModel()\r\n};\r\n\r\n\r\nfunction rootReducer (state = initialState, action) {\r\n    switch(action.type){\r\n        case UPDATE_COLLECTION_DATA:{\r\n            return {\r\n                ...state, MyCollection: action.payload\r\n            }\r\n        }\r\n        case READ_COLLECTION_DATA:{\r\n            return {\r\n                ...state, MyCollection: action.payload\r\n            }\r\n        }\r\n        case SAVE_COLLECTION_DATA:{\r\n            console.log(JSON.stringify(state.MyCollection))\r\n            let data = CollectionServ.saveCollection(state.MyCollection);\r\n            console.log(data);\r\n            return {\r\n                ...state, MyCollection: action.payload\r\n            }\r\n        }   \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./ReduxReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/ReduxStore\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nconst GetCollection = ({ match }) => {\n  return <App collectionId={match.params.collectionId}></App> \n}\n\nReactDOM.render(\n  <Provider store={store}> \n    <Router>\n      <div>\n        <Route exact path=\"/TrendyolCollectionShare\" component={App} />\n        <Route exact path=\"/TrendyolCollectionShare/:collectionId\" component={GetCollection} />\n      </div>\n    </Router>        \n  </Provider>\n  , document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}