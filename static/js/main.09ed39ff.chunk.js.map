{"version":3,"sources":["Redux/ReduxActions.jsx","Redux/ReduxActionContants.jsx","Components/Header.jsx","Components/CollectionItemDetail.jsx","Models/ItemImagesModel.jsx","Models/CollectionItemModel.jsx","TrenyolModels/CampaignModel.jsx","TrenyolModels/CategoryModel.jsx","TrenyolModels/BrandModel.jsx","TrenyolModels/MetaBrandModel.jsx","TrenyolModels/GenderModel.jsx","TrenyolModels/PricetemModel.jsx","TrenyolModels/PriceModel.jsx","TrenyolModels/MerchantModel.jsx","TrenyolModels/DeliveryInformationModel.jsx","TrenyolModels/RatingScoreModel.jsx","TrenyolModels/BreadcrumbItemModel.jsx","TrenyolModels/BreadcrumbModel.jsx","TrenyolModels/ProductModel.jsx","TrenyolModels/TrendyolModel.jsx","Components/CollectionList2.jsx","Components/Main.jsx","App.js","serviceWorker.js","Redux/ReduxReducer.jsx","Redux/ReduxStore.jsx","index.js","Models/CollectionModel.jsx","Services/CollectionService.jsx"],"names":["loadingCollection","payload","type","loadedCollection","saveCollection","createMuiTheme","Header","handleClose","setState","GeneratedLink","handleShowLink","copy","window","location","href","handleGenerateLink","console","log","props","MyCollection","collectionItem","length","enqueueSnackbar","variant","Link","CollectionLink","collectionId","getLocation","state","NewLink","classes","this","className","root","Dialog","fullWidth","maxWidth","open","onClose","aria-labelledby","DialogTitle","style","cursor","id","DialogContent","linkDialogContent","DialogContentText","gutterBottom","linkDialogQR","value","trendyolLogo","src","alt","logoAlt","Typography","collection","component","Fab","fab","color","aria-label","onClick","Component","HeaderSnack","withSnackbar","HeaderComponent","withStyles","flexGrow","maxHeight","minHeight","date","position","top","fontWeight","Image","width","objectFit","zIndex","left","right","margin","imageIcon","height","transform","fontFamily","textAlign","display","flexDirection","connect","IsFetching","IsReadCollectionData","dispatch","Todos","CollectionItemDetail","GridList","gridList","cols","currentItem","itemImages","map","Img","GridListTile","key","imageId","url","CollectionItemDetailComponent","flexWrap","ItemImagesModel","uuidv4","itemId","htmlContent","CollectionItemModel","itemName","itemDescription","price","favoriteCount","gender","totalRatingCount","averageRating","totalCommentCount","merchantName","merchantOfficialName","CampaignModel","name","startDate","Date","endDate","isMultipleSupplied","stockTypeId","showTimer","CategoryModel","hierarchy","refundable","beautifiedName","BrandModel","isVirtual","MetaBrandModel","GenderModel","PricetemModel","text","PriceModel","profitMargin","discountedPrice","sellingPrice","originalPrice","currency","MerchantModel","officialName","cityName","taxNumber","DeliveryInformationModel","isRushDelivery","deliveryDate","RatingScoreModel","BreadcrumbItemModel","path","BreadcrumbModel","items","ProductModel","attributes","alternativeVariants","variants","otherMerchants","campaign","category","brand","showVariants","showSexualContent","metaBrand","productCode","nameWithProductCode","description","productGroupId","tax","businessUnit","images","isSellable","isBasketDiscount","hasStock","isFreeCargo","promotions","merchant","deliveryInformation","isMarketplace","productStamps","hasHtmlContent","uxLayout","isDigitalGood","isRunningOut","scheduledDelivery","ratingScore","showStarredAttributes","reviewsUrl","breadcrumb","TrendyolModel","product","user","configuration","useStyles","backdrop","drawer","lvl1","overflow","lvl2","lvl3","scrolableContainer","conteiner","marginTop","paper","cardTop","opacity","cardBottom","paddingTop","paddingBottom","cardOverlay","bottom","background","transition","overlayHead","alignItems","justifyContent","overlayContent","cardTool","iconColor","textWhite","detailButton","border","borderColor","padding","CollectionList2","handleDetailClose","DetailOpen","handleDetailOpen","e","p","CurrentItem","handleChangeLinkText","target","handleDeleteCollectionItem","preventDefault","TempCollection","EntryIndex","indexOf","splice","updateCollection","handleOpenLink","handleCopyUrl","handleAddCollectionItem","a","fetch","then","response","html","doc","DOMParser","parseFromString","JSONData","Array","from","getElementsByTagName","find","x","innerText","trim","substring","NewTrendyolModel","Object","assign","JSON","parse","NewItem","data","NewImage","CollectionId","ItemId","push","keyCode","Container","Backdrop","CircularProgress","TextField","placeholder","InputProps","endAdornment","InputAdornment","IconButton","onKeyDown","handleEnterKeyPress","bind","onChange","renderAddItemTextInput","Grid","container","spacing","undefined","Item","item","sm","Paper","Checkbox","Id","renderDeleteButton","column","Rating","readOnly","Button","CollectionList2Snack","CollectionList2Component","Main","maxWidthXl","handleOpen","MainComponent","overflowX","CollectionServ","require","App","toggleDarkTheme","newPaletteType","theme","palette","handleSwitchChange","event","switchCheck","checked","getCollection","readCollection","muiTheme","responsiveFontSizes","ThemeProvider","CssBaseline","Switch","AppSnack","Boolean","hostname","match","initialState","CollectionModel","rootReducer","action","store","createStore","ReactDOM","render","anchorOrigin","vertical","horizontal","basename","process","exact","params","to","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","Request","method","headers","body","stringify","json"],"mappings":"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","file":"static/js/main.09ed39ff.chunk.js","sourcesContent":["import {\r\n    UPDATE_COLLECTION_DATA,\r\n    READ_COLLECTION_DATA,\r\n    SAVE_COLLECTION_DATA,\r\n    LOADING_COLLECTION_DATA,\r\n    LOADED_COLLECTION_DATA\r\n}\r\nfrom './ReduxActionContants';\r\n\r\nexport function loadingCollection(payload) {\r\n    return { type: LOADING_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function loadedCollection(payload) {\r\n    return { type: LOADED_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function updateCollection(payload) {\r\n    return { type: UPDATE_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function readCollection(payload) {\r\n    return { type: READ_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function saveCollection(payload) {\r\n    return { type: SAVE_COLLECTION_DATA, payload };\r\n};\r\n\r\n","export const UPDATE_COLLECTION_DATA = \"UPDATE_TODO_DATA\";\r\nexport const READ_COLLECTION_DATA = \"READ_TODO_DATA\";\r\nexport const SAVE_COLLECTION_DATA = \"SAVE_TODO_DATA\";\r\nexport const  LOADING_COLLECTION_DATA = \"LOADING_COLLECTION_DATA\";\r\nexport const  LOADED_COLLECTION_DATA = \"LOADED_COLLECTION_DATA\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles ,createMuiTheme} from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport copy from 'copy-to-clipboard';\r\nimport QRCode from 'qrcode.react';\r\nimport { withSnackbar } from 'notistack';\r\n\r\nimport { saveCollection, loadingCollection, loadedCollection } from \"../Redux/ReduxActions\";\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root:{\r\n        flexGrow: \"1\",\r\n        maxHeight:\"270px\",\r\n        minHeight:\"270px\"\r\n    },\r\n    date :{\r\n        position :\"absolute\",\r\n        top:\"210px\",\r\n        color : \"lightcyan\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    Image:{\r\n        maxWidth:\"100%\",\r\n        width:\"100%\",\r\n        objectFit: \"cover\",\r\n        maxHeight:\"250px\"\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        zIndex: 1,\r\n        left: 0,\r\n        right: 0,\r\n        margin: \"0 auto\",\r\n        top :\"10px\",\r\n    },\r\n    imageIcon :{\r\n        height : \"50px\",\r\n        width : \"50px\",\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n    },\r\n    trendyolLogo:{\r\n        height : \"200px\",\r\n        width : \"100%\",\r\n        //position: \"absolute\",\r\n    },\r\n    collection :{\r\n        //position :\"absolute\",\r\n        // left:\"50%\",\r\n        top:\"210px\",\r\n        fontFamily: \"source_sans_proregular\"\r\n    },\r\n    logoAlt:{\r\n        textAlign: \"center\",\r\n        top:\"210px\",\r\n    },\r\n    linkDialogContent:{\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        textAlign: \"center\",\r\n    },\r\n    linkDialogQR:{\r\n        margin: \"auto\"\r\n    }\r\n};\r\n// theme.typography.h2 = {\r\n//     fontSize: '3.75rem',\r\n//     '@media (min-width:600px)': {\r\n//         fontSize: '2.5rem',\r\n//     },\r\n//     [theme.breakpoints.up('md')]: {\r\n//         fontSize: '3.75rem',\r\n//     },\r\n// };\r\n\r\nexport class Header extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            CollectionLink : \"\",\r\n            GeneratedLink : false,\r\n        }\r\n    }\r\n    \r\n    handleClose=()=>{\r\n        this.setState({GeneratedLink:false});\r\n    }\r\n\r\n    handleShowLink=()=>{\r\n        copy(window.location.href);\r\n        this.setState({GeneratedLink:true});\r\n    }\r\n\r\n    handleGenerateLink=()=>{        \r\n        console.log(this.props.MyCollection.collectionItem);\r\n        if(this.props.MyCollection.collectionItem.length === 0){\r\n            this.props.enqueueSnackbar(\"Eklenecek hiç bir veri bulunamadı. Lütfen ekledikten sonra tekrar deneyin.\", { \r\n                variant: 'warning',\r\n            });\r\n        }\r\n        else\r\n        if(this.props.Link === \"\"){\r\n            this.setState({GeneratedLink:true,CollectionLink:window.location.href+\"/\"+this.props.MyCollection.collectionId});\r\n            this.props.saveCollection();\r\n            this.props.loadedCollection();\r\n        }\r\n        else{\r\n            if(this.props.Link !== \"\"){\r\n                copy(window.location.href);\r\n                this.setState({GeneratedLink:true,CollectionLink:window.location.href});\r\n            }\r\n        }\r\n    }\r\n\r\n    getLocation=()=>{\r\n        return this.props.Link === \"\" ?  window.location.href + this.state.NewLink : window.location.href;\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <Dialog\r\n                    fullWidth\r\n                    maxWidth={\"sm\"}\r\n                    open={this.state.GeneratedLink}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"max-width-dialog-title\"\r\n                >\r\n                    <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                        Koleksiyon Linkiniz\r\n                    </DialogTitle>                \r\n                    <DialogContent>\r\n                        <div className={classes.linkDialogContent}>\r\n                            <DialogContentText gutterBottom>\r\n                                {this.state.CollectionLink}\r\n                            </DialogContentText>  \r\n\r\n                            <QRCode className={classes.linkDialogQR} value={this.state.CollectionLink} />                                         \r\n                        </div>\r\n                    </DialogContent>\r\n                </Dialog>\r\n                <img className={classes.trendyolLogo}src=\"https://cdn.dsmcdn.com/web/logo/ty-logo.svg\" alt=\"https://cdn.dsmcdn.com/web/logo/ty-logo.svg\"/>    \r\n                <div className={classes.logoAlt}>\r\n                    <Typography className={classes.collection} variant=\"h2\" component=\"h1\">\r\n                        KOLEKSİYONUN\r\n                    </Typography>   \r\n                    <Typography className={classes.collection} variant=\"h8\" component=\"h6\">\r\n                        Bu projedeki hiç bir veri ticari bir amaç için kullanılmamaktadır. Tamamen açık kaynak olarak geliştirilmiştir.\r\n                    </Typography>  \r\n                </div>  \r\n                {\r\n                    <Fab className={classes.fab} color=\"primary\" aria-label=\"add\">\r\n                        <LinkIcon  onClick={this.handleGenerateLink} />\r\n                    </Fab>\r\n                }          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        MyCollection: state.MyCollection,\r\n        Link : state.Link,\r\n        IsFetching: state.IsFetching,\r\n        IsReadCollectionData : state.IsReadCollectionData\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        saveCollection: Todos => dispatch(saveCollection(Todos)),\r\n        loadingCollection:Todos => dispatch(loadingCollection(Todos)),\r\n        loadedCollection:Todos => dispatch(loadedCollection(Todos)),\r\n    }\r\n}\r\n\r\nconst HeaderSnack = withSnackbar(Header);\r\nconst HeaderComponent = withStyles(useStyles)(HeaderSnack);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderComponent)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { createMuiTheme,withStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Zoom from 'react-medium-image-zoom';\r\nimport 'react-medium-image-zoom/dist/styles.css';\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root:{\r\n        flexGrow: \"1\",\r\n        maxHeight:\"250px\",\r\n        minHeight:\"250px\"\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        transform: 'translateZ(0)',\r\n    },\r\n};\r\n\r\nexport class CollectionItemDetail extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            open:false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth\r\n                    maxWidth={\"lg\"}\r\n                    open={this.props.open}\r\n                    onClose={this.props.handleClose}\r\n                    aria-labelledby=\"responsive-dialog-title\"\r\n                >\r\n                    <GridList className={classes.gridList} cols={2.5}>\r\n                        {\r\n                            this.props.currentItem != null ?                            \r\n                            this.props.currentItem.itemImages.map((Img)=>{\r\n                                return(\r\n                                    <GridListTile key={Img.imageId} style={{height: \"100% !important\"}}>\r\n                                        <Zoom>\r\n                                            <img\r\n                                                style={{width:\"100%\" , height:\"100%\"}}\r\n                                                alt={Img.imageId}\r\n                                                src={Img.url}\r\n                                            />\r\n                                        </Zoom>\r\n                                    </GridListTile>\r\n                                )\r\n                            }) : \"\"\r\n                        } \r\n                    </GridList>  \r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        MyCollection: state.MyCollection,\r\n        IsFetching: state.IsFetching,\r\n        IsReadCollectionData : state.IsReadCollectionData\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\n\r\nconst CollectionItemDetailComponent = withStyles(useStyles)(CollectionItemDetail);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionItemDetailComponent)","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ItemImagesModel{\r\n    constructor(\r\n        imageId = uuidv4(),\r\n        itemId = \"\",\r\n        url = \"\" ,\r\n        htmlContent = \"\"\r\n    ){\r\n        this.imageId = imageId;\r\n        this.itemId = itemId;\r\n        this.url = url;\r\n        this.htmlContent = htmlContent;\r\n    }\r\n}\r\n\r\nexport default ItemImagesModel;","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass CollectionItemModel{\r\n    constructor(\r\n        itemId = uuidv4(),\r\n        collectionId = \"\",\r\n        itemName = \"\",\r\n        itemDescription = \"\",\r\n        price = 0,\r\n        url = \"\",\r\n        favoriteCount = 0,\r\n        gender = \"\",\r\n        totalRatingCount = 0,\r\n        averageRating = 0.0,\r\n        totalCommentCount = 0,\r\n        merchantName = \"\",\r\n        merchantOfficialName = \"\",\r\n        itemImages = []\r\n    ){\r\n        this.itemId = itemId;\r\n        this.collectionId = collectionId;\r\n        this.itemName = itemName;          \r\n        this.itemDescription = itemDescription;\r\n        this.price = price;\r\n        this.url = url;\r\n        this.favoriteCount = favoriteCount;\r\n        this.gender = gender;\r\n        this.totalRatingCount = totalRatingCount;\r\n        this.averageRating = averageRating;\r\n        this.totalCommentCount = totalCommentCount;\r\n        this.merchantName = merchantName;\r\n        this.merchantOfficialName = merchantOfficialName;\r\n        this.itemImages = itemImages;\r\n    }\r\n}\r\n\r\nexport default CollectionItemModel;","\r\nclass CampaignModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        startDate = new Date(),\r\n        endDate = new Date(),\r\n        isMultipleSupplied = false,\r\n        stockTypeId = 0,\r\n        url = \"\",\r\n        showTimer = false\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.startDate = startDate;\r\n        this.endDate = endDate;\r\n        this.isMultipleSupplied = isMultipleSupplied;\r\n        this.stockTypeId = stockTypeId;\r\n        this.url = url;\r\n        this.showTimer = showTimer;\r\n    }\r\n}\r\n\r\nexport default CampaignModel;","\r\nclass CategoryModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        hierarchy = \"\",\r\n        refundable = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.hierarchy = hierarchy;\r\n        this.refundable = refundable;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default CategoryModel;","\r\nclass BrandModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        isVirtual = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.isVirtual = isVirtual;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default BrandModel;","\r\nclass MetaBrandModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        isVirtual = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.isVirtual = isVirtual;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default MetaBrandModel;","\r\nclass GenderModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport default GenderModel;","\r\nclass PricetemModel{\r\n    constructor(\r\n        text = 0,\r\n        value = 0.0,\r\n    ){\r\n        this.text = text;\r\n        this.value = value;\r\n    }\r\n}\r\n\r\nexport default PricetemModel;","import PricetemModel from './PricetemModel';\r\n\r\nclass PriceModel{\r\n    constructor(\r\n        profitMargin = 0,\r\n        discountedPrice = new PricetemModel(),\r\n        sellingPrice = new PricetemModel(),\r\n        originalPrice = new PricetemModel(),\r\n        currency = \"\"\r\n    ){\r\n        this.profitMargin = profitMargin;\r\n        this.discountedPrice = discountedPrice;\r\n        this.sellingPrice = sellingPrice;\r\n        this.originalPrice = originalPrice;\r\n        this.currency = currency;\r\n    }\r\n}\r\n\r\nexport default PriceModel;","\r\nclass MerchantModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        officialName = \"\",\r\n        cityName = \"\",\r\n        taxNumber = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.officialName = officialName;\r\n        this.cityName = cityName;\r\n        this.taxNumber = taxNumber;\r\n    }\r\n}\r\n\r\nexport default MerchantModel;","\r\nclass DeliveryInformationModel{\r\n    constructor(\r\n        isRushDelivery = false,\r\n        deliveryDate = new Date(),\r\n    ){\r\n        this.isRushDelivery = isRushDelivery;\r\n        this.deliveryDate = deliveryDate;\r\n    }\r\n}\r\n\r\nexport default DeliveryInformationModel;","\r\nclass RatingScoreModel{\r\n    constructor(\r\n        averageRating = 0.0,\r\n        totalRatingCount = 0,\r\n        totalCommentCount = 0\r\n    ){\r\n        this.averageRating = averageRating;\r\n        this.totalRatingCount = totalRatingCount;\r\n        this.totalCommentCount = totalCommentCount;\r\n    }\r\n}\r\n\r\nexport default RatingScoreModel;","\r\nclass BreadcrumbItemModel{\r\n    constructor(\r\n        name = \"\",\r\n        path = \"\",\r\n        type = \"\"\r\n    ){\r\n        this.name = name;\r\n        this.path = path;\r\n        this.type = type;\r\n    }\r\n}\r\n\r\nexport default BreadcrumbItemModel;","import BreadcrumbItemModel from \"./BreadcrumbItemModel\";\r\n\r\nclass BreadcrumbModel{\r\n    constructor(\r\n        items = [BreadcrumbItemModel],\r\n    ){\r\n        this.items = items;\r\n    }\r\n}\r\n\r\nexport default BreadcrumbModel;","import CampaignModel from './CampaignModel';\r\nimport CategoryModel from './CategoryModel';\r\nimport BrandModel from './BrandModel';\r\nimport MetaBrandModel from './MetaBrandModel';\r\nimport GenderModel from './GenderModel';\r\nimport PriceModel from './PriceModel';\r\nimport MerchantModel from './MerchantModel';\r\nimport DeliveryInformationModel from './DeliveryInformationModel';\r\nimport RatingScoreModel from './RatingScoreModel';\r\nimport BreadcrumbModel from './BreadcrumbModel';\r\n\r\nclass ProductModel{\r\n    constructor(\r\n        id = 0 ,\r\n        attributes = [],\r\n        alternativeVariants = [],\r\n        variants = [],\r\n        otherMerchants = [],\r\n        campaign = new CampaignModel(),\r\n        category = new CategoryModel(),\r\n        brand = new BrandModel(),\r\n        color = \"\",\r\n        showVariants = false,\r\n        showSexualContent = false,\r\n        metaBrand = new MetaBrandModel(),\r\n        productCode = \"\",\r\n        name = \"\",\r\n        nameWithProductCode = \"\",\r\n        description = \"\",\r\n        productGroupId = 0,\r\n        tax = 0,\r\n        businessUnit = \"\",\r\n        gender = new GenderModel(),\r\n        url = \"\",\r\n        images = [],\r\n        isSellable = false,\r\n        isBasketDiscount = false,\r\n        hasStock = false,\r\n        price = new PriceModel(),\r\n        isFreeCargo = false,\r\n        promotions = [],\r\n        merchant = new MerchantModel(),\r\n        deliveryInformation = new DeliveryInformationModel(),\r\n        isMarketplace = false,        productStamps = [],\r\n        hasHtmlContent = false,\r\n        favoriteCount = 0,\r\n        uxLayout = \"\",\r\n        isDigitalGood = false,\r\n        isRunningOut = false,\r\n        scheduledDelivery = false,\r\n        ratingScore = new RatingScoreModel(),\r\n        showStarredAttributes = false,\r\n        reviewsUrl = \"\",\r\n        breadcrumb = new BreadcrumbModel()\r\n    ){\r\n        this.id = id;\r\n        this.attributes = attributes;\r\n        this.alternativeVariants = alternativeVariants;\r\n        this.variants = variants;        \r\n        this.otherMerchants = otherMerchants;\r\n        this.campaign = campaign;\r\n        this.category = category;\r\n        this.brand = brand;\r\n        this.color = color;\r\n        this.showVariants = showVariants;\r\n        this.showSexualContent = showSexualContent;\r\n        this.metaBrand = metaBrand;\r\n        this.productCode = productCode;\r\n        this.name = name;\r\n        this.nameWithProductCode = nameWithProductCode;\r\n        this.description = description;\r\n        this.productGroupId = productGroupId;\r\n        this.tax = tax;\r\n        this.businessUnit = businessUnit;\r\n        this.gender = gender;        \r\n        this.url = url;\r\n        this.images = images;\r\n        this.isSellable = isSellable;\r\n        this.isBasketDiscount = isBasketDiscount;\r\n        this.hasStock = hasStock;\r\n        this.price = price;\r\n        this.isFreeCargo = isFreeCargo;\r\n        this.promotions = promotions;\r\n        this.merchant = merchant;\r\n        this.deliveryInformation = deliveryInformation;\r\n        this.isMarketplace = isMarketplace;\r\n        this.productStamps = productStamps;         \r\n        this.hasHtmlContent = hasHtmlContent;\r\n        this.favoriteCount = favoriteCount;\r\n        this.uxLayout = uxLayout;\r\n        this.isDigitalGood = isDigitalGood;        \r\n        this.isRunningOut = isRunningOut;\r\n        this.scheduledDelivery = scheduledDelivery;\r\n        this.ratingScore = ratingScore;\r\n        this.showStarredAttributes = showStarredAttributes;\r\n        this.reviewsUrl = reviewsUrl;\r\n        this.breadcrumb = breadcrumb;                             \r\n    }\r\n}\r\n\r\nexport default ProductModel;","import ProductModel from \"./ProductModel\";\r\n\r\nclass TrendyolModel{\r\n    constructor(\r\n        product = new ProductModel(),\r\n        htmlContent = null,\r\n        user = null,\r\n        configuration = null\r\n    ){\r\n        this.product = product;\r\n        this.htmlContent = htmlContent;\r\n        this.user = user;\r\n        this.configuration = configuration;\r\n    }\r\n}\r\n\r\nexport default TrendyolModel;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Button from '@material-ui/core/Button';\r\nimport copy from 'copy-to-clipboard';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport CollectionItemDetail from './CollectionItemDetail';\r\nimport ItemImagesModel from '../Models/ItemImagesModel';\r\nimport CollectionItemModel from '../Models/CollectionItemModel';\r\nimport { updateCollection, saveCollection, loadingCollection, loadedCollection } from \"../Redux/ReduxActions\";\r\nimport TrendyolModel from '../TrenyolModels/TrendyolModel';\r\nimport { withSnackbar } from 'notistack';\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root:{\r\n        display:\"flex\"\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    lvl1:{\r\n        // height: \"100vh\",\r\n        position:\"relative\",\r\n        overflow :\"hidden !important\",\r\n        flexGrow : \"1\",\r\n        display:\"flex\",\r\n        flexDirection:\"column\"\r\n    },\r\n    lvl2:{\r\n        position: \"relative\",\r\n        flexGrow: \"1\"\r\n    },\r\n    lvl3:{\r\n        margin: \"30px\"\r\n    },\r\n    scrolableContainer:{\r\n        height: \"100% !important\",\r\n        position: \"relative\",\r\n        flexGrow: \"1\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        overflow: \"hidden!important\"\r\n    },\r\n    conteiner:{\r\n        marginTop:\"10px\"\r\n    },\r\n    paper:{\r\n        height: \"100% !important\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    cardTop:{\r\n        textAlign: \"center\",\r\n        position: \"relative\",\r\n        '&:hover': {\r\n            '& $cardOverlay': {\r\n                opacity: 1,\r\n            }\r\n        }\r\n    },\r\n    cardBottom:{\r\n        paddingTop: \"0.5rem !important\",\r\n        paddingBottom: \"0.5rem !important\",\r\n        textAlign: \"center\"\r\n    },\r\n    Img:{\r\n        width: \"100%\",\r\n        display: \"block !important\"\r\n    },\r\n    cardOverlay:{\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        opacity: 0,\r\n        zIndex: 2,\r\n        position: \"absolute\",\r\n        background: \"rgba(0, 0, 0, 0.67)\",\r\n        transition: \"all 250ms ease-in-out\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    overlayHead:{\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between !important\",\r\n        display: \"flex\",\r\n\r\n    },\r\n    overlayContent:{\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n    },\r\n    cardTool:{\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    iconColor:{\r\n        color: \"rgba(255, 255, 255, 1) !important\",\r\n        cursor: \"pointer\"\r\n    },\r\n    textWhite:{\r\n        color :\"rgba(255, 255, 255, 1) !important\"\r\n    },\r\n    detailButton:{\r\n        color :\"rgba(255, 255, 255, 1) !important\",\r\n        border: \"1px solid rgba(0, 0, 0, 0.23)\",\r\n        borderColor: \"#ffffff !important\",\r\n        padding: \"5px 15px\"\r\n    }\r\n  };\r\n\r\nexport class CollectionList2 extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            Link : \"\",\r\n            DetailOpen : false,\r\n            CurrentItem : null\r\n        }\r\n    }\r\n\r\n    handleDetailClose=()=>{\r\n        this.setState({DetailOpen:false});\r\n    }\r\n    handleDetailOpen=(e,p)=>{\r\n        this.setState({CurrentItem: p,DetailOpen:true});\r\n    }\r\n    handleChangeLinkText=(e)=>{\r\n        this.setState({Link:e.target.value});\r\n    }\r\n\r\n    handleDeleteCollectionItem=(e,p)=>{\r\n        e.preventDefault();\r\n\r\n        let TempCollection = {...this.props.MyCollection};\r\n        let EntryIndex = TempCollection.collectionItem.map((e)=> { return e.itemId }).indexOf(p);\r\n        if (EntryIndex !== -1) {\r\n            TempCollection.collectionItem.splice(EntryIndex, 1);\r\n            this.props.updateCollection(TempCollection);\r\n        }\r\n    }\r\n    handleOpenLink=(e,p)=>{\r\n        e.preventDefault();\r\n        window.open(p);\r\n    }\r\n    handleCopyUrl=(e,p)=>{\r\n        e.preventDefault();\r\n        copy(p);        \r\n    }\r\n\r\n    handleAddCollectionItem=async(e)=>{ \r\n        this.props.loadingCollection();\r\n        try {\r\n            const herokuHttps = \"https://cors-anywhere.herokuapp.com/\";\r\n            await fetch(herokuHttps+this.state.Link)\r\n            .then((response)=>{\r\n                return response.text()\r\n            })\r\n            .then((html)=>{\r\n                var parser = new DOMParser();\r\n                var doc = parser.parseFromString(html, \"text/html\");   \r\n    \r\n                let ScriptsArray =Array.from(doc.getElementsByTagName(\"script\"));\r\n                let JSONData = ScriptsArray.find(x=>x.innerText.indexOf(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__\")!==-1).innerText.trim().substring(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__ =\".length);\r\n                JSONData = JSONData.substring(0,JSONData.length-1);\r\n                let NewTrendyolModel = new TrendyolModel();\r\n                console.log(Object.assign(NewTrendyolModel,JSON.parse(JSONData)));\r\n                \r\n                let TempCollection = {...this.props.MyCollection};\r\n                let NewItem = new CollectionItemModel();\r\n    \r\n                NewItem.itemName = NewTrendyolModel.product.productCode;\r\n                NewItem.itemDescription = NewTrendyolModel.product.name;\r\n                NewItem.url = this.state.Link;\r\n                NewItem.price = NewTrendyolModel.product.price.sellingPrice.value;\r\n                NewItem.gender = NewTrendyolModel.product.gender.name;\r\n                NewItem.favoriteCount = NewTrendyolModel.product.favoriteCount;\r\n                NewItem.totalRatingCount = NewTrendyolModel.product.ratingScore.totalRatingCount;\r\n                NewItem.totalCommentCount = NewTrendyolModel.product.ratingScore.totalCommentCount;\r\n                NewItem.averageRating = NewTrendyolModel.product.ratingScore.averageRating;\r\n                NewItem.merchantName = NewTrendyolModel.product.merchant.name;\r\n                NewItem.merchantOfficialName = NewTrendyolModel.product.merchant.officialName;\r\n    \r\n                NewTrendyolModel.product.images.map((data)=>{\r\n                    let NewImage = new ItemImagesModel();\r\n                    NewItem.collectionId = TempCollection.CollectionId;\r\n                    NewImage.itemId = NewItem.ItemId;\r\n                    NewImage.url = \"https://cdn.dsmcdn.com/\"+data; \r\n                    NewImage.htmlContent = \"\";\r\n                    NewItem.itemImages.push(NewImage);\r\n                })\r\n    \r\n                TempCollection.collectionItem.push(NewItem);\r\n                this.props.updateCollection(TempCollection);  \r\n                \r\n            })\r\n        } catch (error) {\r\n            this.props.enqueueSnackbar(\"Ekleme işleminde hata. Linkin doğru olduğundan emin olun.\",{ \r\n                variant: 'error',\r\n            });\r\n        }\r\n        finally {\r\n            this.props.loadedCollection(); \r\n            this.setState({Link:\"\"}); \r\n        }\r\n    }    \r\n\r\n    handleEnterKeyPress(e){\r\n        if(e.keyCode === 13){\r\n            this.handleAddCollectionItem(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        const renderDeleteButton =(Id)=>{\r\n            if (!this.props.IsFetching && !this.props.IsReadCollectionData) {\r\n                return(\r\n                    <DeleteIcon className={classes.iconColor} onClick={(e,p)=>this.handleDeleteCollectionItem(e,Id)}/>\r\n                )\r\n            }\r\n        }\r\n\r\n        const renderAddItemTextInput=()=>{\r\n            if (!this.props.IsFetching && !this.props.IsReadCollectionData) {\r\n                return(\r\n                    <TextField\r\n                    id=\"Assinged-Hotkey-2\"\r\n                    placeholder=\"Eklemek istediğin ürünün linkini buraya yapıştır ... \"\r\n                    fullWidth                        \r\n                    InputProps={{\r\n                        endAdornment: \r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton onClick={this.handleAddCollectionItem}>\r\n                                <AddIcon/>\r\n                            </IconButton>                                \r\n                        </InputAdornment>,\r\n                        }}\r\n                    onKeyDown={this.handleEnterKeyPress.bind(this)}\r\n                    onChange={(e)=>this.handleChangeLinkText(e)}\r\n                    value={this.state.Link}\r\n                />   \r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <Backdrop className={classes.backdrop} open={this.props.IsFetching}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>            \r\n                <CollectionItemDetail open={this.state.DetailOpen} handleClose={this.handleDetailClose} currentItem={this.state.CurrentItem}></CollectionItemDetail>\r\n                <div className={classes.root}>\r\n                    <div className={classes.lvl1}>\r\n                        <div className={classes.lvl2}>\r\n                            <div className={classes.lvl3}>                                   \r\n                                <div className={classes.scrolableContainer}>\r\n                                    {\r\n                                        renderAddItemTextInput()\r\n                                    }\r\n                                    <Grid className={classes.conteiner} container spacing={2} >\r\n                                    {\r\n                                        this.props.MyCollection.collectionItem !== undefined\r\n                                        && this.props.MyCollection.collectionItem != null \r\n                                        && this.props.MyCollection.collectionItem.length > 0 ? \r\n                                        this.props.MyCollection.collectionItem.map(Item=>{\r\n                                            return (\r\n                                                <Grid item sm={4} key={Item.itemId}>\r\n                                                    <Paper className={classes.paper}>\r\n                                                        <div className={classes.cardTop}>\r\n                                                            {\r\n                                                                Item.itemImages\r\n                                                                && Item.itemImages.length > 0 ?\r\n                                                                <img className={classes.Img} src={Item.itemImages[0].url} alt={Item.itemImages[0].imageId}></img> : \"\"                                                                  \r\n                                                            }\r\n                                                            \r\n                                                            <div className={classes.cardOverlay}>\r\n                                                                <div className={classes.overlayHead}>\r\n                                                                    <Checkbox className={classes.iconColor}></Checkbox>\r\n                                                                    <div className={classes.cardTool}>\r\n                                                                        <FilterNoneIcon className={classes.iconColor} onClick={(e,p)=>this.handleCopyUrl(e,Item.url)}/>\r\n                                                                        <EditIcon className={classes.iconColor} onClick={(e,p)=>this.handleOpenLink(e,Item.url)}/>\r\n                                                                        {\r\n                                                                            renderDeleteButton(Item.itemId)\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className={classes.overlayContent}>\r\n                                                                    <div>\r\n                                                                        <div className={classes.column}>\r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                {Item.favoriteCount} Kişinin favorisi\r\n                                                                            </Typography>  \r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                Satıcı Adı: {Item.merchantName}\r\n                                                                            </Typography>    \r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                Resmi Adı: {Item.merchantOfficialName}\r\n                                                                            </Typography>   \r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                Fiyatı : {Item.price}\r\n                                                                            </Typography>  \r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                Toplam Değerlendirme : {Item.totalRatingCount}\r\n                                                                            </Typography>      \r\n                                                                            <Typography className={classes.textWhite}>\r\n                                                                                Toplam Yorum : {Item.totalCommentCount}\r\n                                                                            </Typography>   \r\n                                                                            <Rating name=\"read-only\" value={Item.averageRating} readOnly />                                                                                                                                                                                   \r\n                                                                        </div>            \r\n                                                                        <Button className={classes.detailButton} onClick={(e,p)=>this.handleDetailOpen(e,Item)}>DETAY</Button>                                 \r\n                                                                    </div>  \r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className={classes.cardBottom}>\r\n                                                            <p>{Item.itemName}</p>\r\n                                                            <small>{Item.itemDescription}</small>\r\n                                                        </div>\r\n                                                    </Paper>\r\n                                                </Grid>  \r\n                                            )\r\n                                        })\r\n                                        : \"\"\r\n                                    }                                                                                                 \r\n                                    </Grid>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        MyCollection: state.MyCollection,\r\n        IsFetching: state.IsFetching,\r\n        IsReadCollectionData : state.IsReadCollectionData\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCollection: Todos => dispatch(updateCollection(Todos)),\r\n        saveCollection: Todos => dispatch(saveCollection(Todos)),\r\n        loadingCollection:Todos => dispatch(loadingCollection(Todos)),\r\n        loadedCollection:Todos => dispatch(loadedCollection(Todos)),\r\n    }\r\n}\r\n\r\nconst CollectionList2Snack = withSnackbar(CollectionList2);\r\nconst CollectionList2Component = withStyles(useStyles)(CollectionList2Snack);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionList2Component)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Header from './Header';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport CollectionList2 from './CollectionList2';\r\n\r\nconst useStyles = {\r\n    lvl1:{\r\n        display: \"flex\",\r\n        \r\n    },\r\n    lvl2:{\r\n        flexGrow: \"1\",\r\n        maxWidth: \"100%\",\r\n        overflowX: \"hidden\"\r\n    },\r\n    lvl3:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        overflow: \"hidden\",\r\n        transition: \"transform 195ms\",\r\n        minHeight: \"95vh\"\r\n    }\r\n};\r\n\r\nexport class Main extends Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div className={classes.lvl1}>\r\n                <div className={classes.lvl2}>                       \r\n                    <div className={classes.lvl3}>   \r\n                        <Container maxWidthXl>\r\n                            <Header handleOpen={this.handleOpen}></Header>\r\n                            <CollectionList2 handleOpen={this.handleDetailOpen}></CollectionList2> \r\n                        </Container>\r\n                    </div>\r\n                </div>          \r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nconst MainComponent = withStyles(useStyles)(Main);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ThemeProvider  } from \"@material-ui/styles\";\r\nimport {createMuiTheme,responsiveFontSizes } from \"@material-ui/core\";\r\nimport Main from './Components/Main';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport { withSnackbar } from 'notistack';\r\nimport { readCollection,loadingCollection,loadedCollection } from \"./Redux/ReduxActions\";\r\n\r\nconst CollectionServ = require('./Services/CollectionService');\r\n\r\nexport class App extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state={\r\n      switchCheck:false,\r\n      theme : {\r\n        palette: {\r\n          type: \"light\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n   toggleDarkTheme = () => {\r\n    let newPaletteType = this.state.theme.palette.type === \"light\" ? \"dark\" : \"light\";\r\n    this.setState({\r\n      theme:{\r\n        palette: {\r\n          type: newPaletteType\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSwitchChange = (event) => {\r\n    this.toggleDarkTheme()\r\n    this.setState({switchCheck:event.target.checked});\r\n  };\r\n\r\n  async componentDidMount(){\r\n    try {\r\n      console.log(window.location);\r\n      this.props.loadingCollection();     \r\n      if(this.props.collectionId !== undefined && this.props.collectionId !== \"\")\r\n      {             \r\n        \r\n        let data = await CollectionServ.getCollection(this.props.collectionId);\r\n        if(data){\r\n          console.log(data);\r\n          this.props.readCollection(data);  \r\n        }     \r\n      }  \r\n    } catch (error) {\r\n      this.props.enqueueSnackbar(\"Veri bulunumadı\",{ \r\n        variant: 'error',\r\n      });\r\n    }\r\n    finally{\r\n      this.props.loadedCollection();\r\n    }    \r\n  }\r\n  \r\n  render() {\r\n    const muiTheme = createMuiTheme(this.state.theme);\r\n    const theme = responsiveFontSizes(muiTheme);\r\n    if(!this.props.IsFetching) this.props.loadedCollection(); else this.props.loadingCollection()\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline/>\r\n        <Switch\r\n          checked={this.state.switchCheck}\r\n          onChange={this.handleSwitchChange}\r\n        />          \r\n        <Main/>     \r\n      </ThemeProvider> \r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    MyCollection: state.MyCollection, \r\n    Link : state.Link,\r\n    IsFetching: state.IsFetching,\r\n    IsReadCollectionData : state.IsReadCollectionData\r\n  };  \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    readCollection: Todos => dispatch(readCollection(Todos)),\r\n    loadingCollection:Todos => dispatch(loadingCollection(Todos)),\r\n    loadedCollection:Todos => dispatch(loadedCollection(Todos)),\r\n  }\r\n}\r\n\r\nconst AppSnack = withSnackbar(App);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppSnack)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    UPDATE_COLLECTION_DATA,\r\n    READ_COLLECTION_DATA,\r\n    SAVE_COLLECTION_DATA,\r\n    LOADING_COLLECTION_DATA,\r\n    LOADED_COLLECTION_DATA\r\n}\r\nfrom './ReduxActionContants';\r\n\r\nimport CollectionModel from '../Models/CollectionModel';\r\nconst CollectionServ = require('../Services/CollectionService');\r\n\r\nconst initialState = {\r\n    MyCollection : new CollectionModel(),\r\n    Link : \"\",\r\n    IsFetching : false,\r\n    IsReadCollectionData : false\r\n};\r\n\r\n\r\nfunction rootReducer (state = initialState, action) {\r\n    switch(action.type){\r\n        case UPDATE_COLLECTION_DATA:{\r\n            return {\r\n                ...state, MyCollection: action.payload,IsFetching:false\r\n            }\r\n        }\r\n        case READ_COLLECTION_DATA:{\r\n            return {\r\n                ...state, MyCollection: action.payload,IsReadCollectionData:true,IsFetching:false,Link:action.payload.collectionId\r\n            }         \r\n        }\r\n        case SAVE_COLLECTION_DATA:{\r\n            let data = CollectionServ.saveCollection(state.MyCollection);\r\n            console.log(data);\r\n            return {\r\n                ...state, MyCollection: new CollectionModel(),IsFetching:false,Link:\"\",IsReadCollectionData:false\r\n            }\r\n        }   \r\n        case LOADING_COLLECTION_DATA:{\r\n            return {\r\n                ...state, IsFetching: true\r\n            }\r\n        }\r\n        case LOADED_COLLECTION_DATA:{\r\n            return {\r\n                ...state, IsFetching: false\r\n            }\r\n        }        \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./ReduxReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/ReduxStore\";\nimport { Route ,Switch, HashRouter,Redirect } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\n\nconst GetCollection = ({ match }) => {\n  return <App collectionId={match.params.collectionId}></App> \n}\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store={store}> \n    <SnackbarProvider\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center',\n      }}\n    >\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={App} />\n          <Route exact path=\"/:collectionId\" component={GetCollection}/>\n          <Route path = \"*\" component={App}/>\n          <Redirect to=\"/\" />\n        </Switch>\n      </HashRouter>   \n    </SnackbarProvider>        \n  </Provider>\n  , document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass CollectionModel{\r\n    constructor(\r\n        collectionId = uuidv4(),\r\n        name = \"\",\r\n        collectionItem = []\r\n    ){\r\n        this.collectionId = collectionId;\r\n        this.name = name;\r\n        this.collectionItem = collectionItem;\r\n    }\r\n}\r\n\r\nexport default CollectionModel;","import CollectionModel from '../Models/CollectionModel';\r\n\r\nexport async function getCollection (Request){\r\n    let response = await fetch(\"https://trendyolcollectionshareapp.herokuapp.com/Collection/GetData\",\r\n    {\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify(Request)\r\n    });\r\n    \r\n    let data = await response.json();\r\n    // let NewModel = Object.assign(new CollectionModel(),data);\r\n    return data;\r\n}\r\n\r\nexport async function saveCollection(Request){\r\n    let response = await fetch(\"https://trendyolcollectionshareapp.herokuapp.com/Collection/Add\",\r\n    {\r\n        method:'POST',\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        body:JSON.stringify(Request)\r\n    });\r\n    let data = await response.json();\r\n    return data;\r\n}\r\n"],"sourceRoot":""}