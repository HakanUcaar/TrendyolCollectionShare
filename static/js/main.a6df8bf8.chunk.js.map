{"version":3,"sources":["ImagePaths.jsx","Images/summer.jpg","Images/Img2.jpg","Redux/ReduxActions.jsx","Redux/ReduxActionContants.jsx","Components/AddNewList.jsx","Components/Header.jsx","Components/Detail.jsx","Models/ItemImagesModel.jsx","Models/CollectionItemModel.jsx","TrenyolModels/CampaignModel.jsx","TrenyolModels/CategoryModel.jsx","TrenyolModels/BrandModel.jsx","TrenyolModels/MetaBrandModel.jsx","TrenyolModels/GenderModel.jsx","TrenyolModels/PricetemModel.jsx","TrenyolModels/PriceModel.jsx","TrenyolModels/MerchantModel.jsx","TrenyolModels/DeliveryInformationModel.jsx","TrenyolModels/RatingScoreModel.jsx","TrenyolModels/BreadcrumbItemModel.jsx","TrenyolModels/BreadcrumbModel.jsx","TrenyolModels/ProductModel.jsx","TrenyolModels/TrendyolModel.jsx","Components/TodoList.jsx","Components/Main.jsx","App.js","serviceWorker.js","Redux/ReduxReducer.jsx","Models/CollectionModel.jsx","Redux/ReduxStore.jsx","index.js"],"names":["summerImgPath","require","Img2","module","exports","updateCollection","payload","type","AddNewList","onTitleChange","e","setState","ListTitle","target","value","onHandleAdd","state","Dialog","open","this","props","onClose","handleClose","aria-labelledby","maxWidth","fullWidth","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","onChange","DialogActions","Button","onClick","color","Component","connect","MyCollection","dispatch","keyButton","Header","createMuiTheme","NewListOpen","handleOpen","classes","className","root","trendyolLogo","src","alt","Typography","collection","variant","component","Fab","fab","aria-label","HeaderComponent","withStyles","flexGrow","maxHeight","minHeight","date","position","top","fontWeight","Image","width","objectFit","left","zIndex","imageIcon","height","transform","fontFamily","useStyles","dialog","marginTop","appBar","title","marginLeft","spacing","flex","newTodo","Transition","React","forwardRef","ref","Slide","direction","Detail","handleChangeEntry","TodoContent","handleAddNewEntry","handleDeleteEntry","p","preventDefault","TempTodoList","SelectedTodos","EntryIndex","Todos","map","Id","indexOf","splice","updateTodoListData","fullScreen","TransitionComponent","AppBar","Toolbar","IconButton","edge","Name","placeholder","InputProps","endAdornment","InputAdornment","List","labelId","ListItem","key","button","ListItemIcon","Checkbox","tabIndex","disableRipple","ListItemText","primary","Content","ListItemSecondaryAction","DetailComponent","ItemImagesModel","uuidv4","URL","HtmlContent","CollectionItemModel","ItemName","ItemDescription","Price","FavoriteCount","Gender","TotalRatingCount","AverageRating","TotalCommentCount","MerchantName","MerchantOfficialName","Images","CampaignModel","name","startDate","Date","endDate","isMultipleSupplied","stockTypeId","url","showTimer","CategoryModel","hierarchy","refundable","beautifiedName","BrandModel","isVirtual","MetaBrandModel","GenderModel","PricetemModel","text","PriceModel","profitMargin","discountedPrice","sellingPrice","originalPrice","currency","MerchantModel","officialName","cityName","taxNumber","DeliveryInformationModel","isRushDelivery","deliveryDate","RatingScoreModel","averageRating","totalRatingCount","totalCommentCount","BreadcrumbItemModel","path","BreadcrumbModel","items","ProductModel","attributes","alternativeVariants","variants","otherMerchants","campaign","category","brand","showVariants","showSexualContent","metaBrand","productCode","nameWithProductCode","description","productGroupId","tax","businessUnit","gender","images","isSellable","isBasketDiscount","hasStock","price","isFreeCargo","promotions","merchant","deliveryInformation","isMarketplace","productStamps","hasHtmlContent","favoriteCount","uxLayout","isDigitalGood","isRunningOut","scheduledDelivery","ratingScore","showStarredAttributes","reviewsUrl","breadcrumb","TrendyolModel","product","htmlContent","user","configuration","list","li_item_tag","padding","fontSize","minWidth","alignItems","lineHeight","borderRadius","gridList","flexWrap","palette","light","titleBar","background","paper","weight","slide","display","flexDirection","ImageStyle","column","flexBasis","TodoList","handleDetailClose","DetailOpen","handleChangeLinkText","Link","handleAddCollectionItem","getHTML","response","JSONData","Array","from","getElementsByTagName","find","x","innerText","trim","substring","length","NewTrendyolModel","console","log","Object","assign","JSON","parse","TempCollection","NewItem","data","NewImage","push","CollectionItems","handleDeleteCollectionItem","handleOpenLink","window","handleOpenTodo","callback","XMLHttpRequest","xhr","onload","responseXML","responseType","send","Container","Item","Accordion","AccordionSummary","expandIcon","aria-controls","handleOpenMail","AccordionDetails","GridList","cols","Img","GridListTile","style","Divider","AccordionActions","size","TodoListComponent","saveCollection","Main","lvl1","lvl2","lvl3","handleDetailOpen","MainComponent","overflowX","overflow","transition","App","toggleDarkTheme","newPaletteType","theme","handleSwitchChange","event","switchCheck","checked","muiTheme","ThemeProvider","CssBaseline","Switch","Boolean","location","hostname","match","initialState","rootReducer","action","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a6df8bf8.chunk.js","sourcesContent":["\r\nconst summerImgPath = require(\"./Images/summer.jpg\");\r\nconst Img2 = require(\"./Images/Img2.jpg\");\r\n\r\nmodule.exports ={\r\n    'summerImgPath': summerImgPath,\r\n    'Img2':Img2\r\n}","module.exports = __webpack_public_path__ + \"static/media/summer.f653dce9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Img2.f0960919.jpg\";","import {\r\n    UPDATE_COLLECTION_DATA,\r\n    READ_COLLECTION_DATA,\r\n    SAVE_COLLECTION_DATA\r\n}\r\nfrom './ReduxActionContants';\r\n\r\nexport function updateCollection(payload) {\r\n    return { type: UPDATE_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function readCollection(payload) {\r\n    return { type: READ_COLLECTION_DATA, payload };\r\n};\r\n\r\nexport function saveCollection(payload) {\r\n    return { type: SAVE_COLLECTION_DATA, payload };\r\n};\r\n\r\n","export const UPDATE_COLLECTION_DATA = \"UPDATE_TODO_DATA\";\r\nexport const READ_COLLECTION_DATA = \"READ_TODO_DATA\";\r\nexport const SAVE_COLLECTION_DATA = \"SAVE_TODO_DATA\";","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { updateCollection } from \"../Redux/ReduxActions\";\r\n\r\nexport class AddNewList extends Component {\r\n    constructor(){\r\n        super();\r\n        \r\n        this.state={\r\n            ListTitle : \"\"\r\n        }\r\n    }\r\n\r\n    onTitleChange=(e)=>{\r\n        this.setState({ListTitle:e.target.value});\r\n    }\r\n\r\n    onHandleAdd=()=>{\r\n        // let TodoLists = {...this.props.TodoLists};\r\n        // let NewTodos = new Todos();\r\n        // NewTodos.Name = this.state.ListTitle;\r\n        // TodoLists.Todolists.push(NewTodos);\r\n        // this.props.updateTodoListData(TodoLists);\r\n        // this.props.handleClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dialog open={this.props.open} onClose={this.props.handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"lg\" fullWidth>\r\n                    <DialogTitle id=\"form-dialog-title\">Yeni Kalem</DialogTitle>\r\n                    <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Link\"\r\n                        fullWidth\r\n                        onChange={(e)=>this.onTitleChange(e)}\r\n                    />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Button onClick={(e)=>this.onHandleAdd()} color=\"primary\">\r\n                        Ekle\r\n                    </Button>\r\n                    <Button onClick={this.props.handleClose} color=\"primary\">\r\n                        İptal\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state){\r\n    return { MyCollection: state.MyCollection };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCollection: keyButton => dispatch(updateCollection(keyButton))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNewList)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddNewList from './AddNewList';\r\nimport * as colors from \"@material-ui/core/colors\";\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst ImgPath = require(\"../ImagePaths\");\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root:{\r\n        flexGrow: \"1\",\r\n        maxHeight:\"250px\",\r\n        minHeight:\"250px\"\r\n    },\r\n    date :{\r\n        position :\"absolute\",\r\n        top:\"210px\",\r\n        color : \"lightcyan\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    Image:{\r\n        maxWidth:\"100%\",\r\n        width:\"100%\",\r\n        objectFit: \"cover\",\r\n        maxHeight:\"250px\"\r\n    },\r\n    fab: {\r\n        position: \"absolute\",\r\n        top: \"220px\",\r\n        left:\"80%\",\r\n        zIndex :\"3\"\r\n    },\r\n    imageIcon :{\r\n        height : \"50px\",\r\n        width : \"50px\",\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n    },\r\n    trendyolLogo:{\r\n        height : \"200px\",\r\n        width : \"100%\",\r\n        position: \"absolute\",\r\n    },\r\n    collection :{\r\n        position :\"absolute\",\r\n        left:\"50%\",\r\n        top:\"210px\",\r\n        fontFamily: \"source_sans_proregular\"\r\n    },\r\n};\r\n\r\nexport class Header extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            NewListOpen : false,\r\n        }\r\n    }\r\n    \r\n    handleClose=()=>{\r\n        this.setState({NewListOpen:false});\r\n    }\r\n\r\n    handleOpen=()=>{\r\n        this.setState({NewListOpen:true});\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <img className={classes.trendyolLogo}src=\"https://cdn.dsmcdn.com/web/logo/ty-logo.svg\" alt=\"https://cdn.dsmcdn.com/web/logo/ty-logo.svg\"/>      \r\n                <Typography className={classes.collection} variant=\"h2\" component=\"h1\">\r\n                    KOLEKSİYON\r\n                </Typography>             \r\n                <Fab className={classes.fab} color=\"primary\" aria-label=\"add\">\r\n                    <LinkIcon  onClick={this.handleOpen} />\r\n                </Fab> \r\n                <AddNewList open={this.state.NewListOpen} handleClose={this.handleClose}></AddNewList> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nconst HeaderComponent = withStyles(useStyles)(Header);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderComponent)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nimport { updateCollection } from \"../Redux/ReduxActions\";\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    dialog:{\r\n        marginTop : \"30px\",        \r\n    },\r\n    appBar: {\r\n      position: 'relative',\r\n    },\r\n    title: {\r\n      marginLeft: theme.spacing(2),\r\n      flex: 1,\r\n    },\r\n    newTodo: {\r\n        margin: 10\r\n    },\r\n  };\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});  \r\n\r\nexport class Detail extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            TodoContent : \"\"\r\n        }\r\n    }\r\n\r\n    handleChangeEntry=(e)=>{\r\n        this.setState({TodoContent:e.target.value});    \r\n    }\r\n\r\n    handleAddNewEntry=()=>{\r\n        // let NewTodo = new TodoModel();\r\n        // NewTodo.Content = this.state.TodoContent;\r\n        // let TempTodoList = {...this.props.SelectedTodos};\r\n        // TempTodoList.Todos.push(NewTodo);\r\n        // this.props.updateTodoListData(TempTodoList);\r\n    }\r\n\r\n    handleDeleteEntry=(e,p)=>{\r\n        e.preventDefault();\r\n        let TempTodoList = {...this.props.SelectedTodos};\r\n        let EntryIndex = TempTodoList.Todos.map((e)=> { return e.Id }).indexOf(p);\r\n        if (EntryIndex !== -1) {\r\n            TempTodoList.Todos.splice(EntryIndex, 1);\r\n            this.props.updateTodoListData(TempTodoList);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div >\r\n                <Dialog className={classes.dialog} fullScreen open={this.props.open} onClose={this.props.handleClose} TransitionComponent={Transition}>\r\n                    <AppBar className={classes.appBar}>\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={this.props.handleClose} aria-label=\"close\">\r\n                                <ArrowBackIosIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" className={classes.title}>\r\n                                {this.props.SelectedTodos != null ? this.props.SelectedTodos.Name : \"\"}\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <TextField\r\n                        className={classes.newTodo}\r\n                        id=\"filled-full-width\"\r\n                        label=\"Yeni madde\"\r\n                        placeholder=\"Yeni madde ...\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        variant=\"filled\"\r\n                        InputProps={{\r\n                            endAdornment: \r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick={this.handleAddNewEntry}>\r\n                                    <SendIcon /> \r\n                                </IconButton>                                \r\n                            </InputAdornment>,\r\n                        }}\r\n                        onChange={(e)=>this.handleChangeEntry(e)}\r\n                    />\r\n                    <List>\r\n                        {\r\n                            this.props.SelectedTodos != null && this.props.SelectedTodos.Todos != null? \r\n                            this.props.SelectedTodos.Todos.map((value) => {\r\n                                const labelId = `checkbox-list-label-${value.Id}`;\r\n                    \r\n                                return (\r\n                                    <ListItem key={value.Id} button>\r\n                                        <ListItemIcon>\r\n                                            <Checkbox\r\n                                            edge=\"start\"\r\n                                            tabIndex={-1}\r\n                                            disableRipple\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText id={labelId} primary={value.Content} />\r\n                                        <ListItemSecondaryAction>\r\n                                            <IconButton onClick={(e,p)=>this.handleDeleteEntry(e,value.Id)} edge=\"end\" aria-label=\"comments\">\r\n                                                <DeleteIcon />\r\n                                            </IconButton>\r\n                                      </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                );\r\n                            }) : \"\"\r\n                        }\r\n                    </List>\r\n \r\n                </Dialog>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { MyCollection: state.MyCollection };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCollection: Todos => dispatch(updateCollection(Todos))\r\n    }\r\n}\r\n\r\nconst DetailComponent = withStyles(useStyles)(Detail);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailComponent)\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ItemImagesModel{\r\n    constructor(\r\n        Id = uuidv4(),\r\n        URL = \"\" ,\r\n        HtmlContent = \"\"\r\n    ){\r\n        this.Id = Id;\r\n        this.URL = URL;\r\n        this.HtmlContent = HtmlContent;\r\n    }\r\n}\r\n\r\nexport default ItemImagesModel;","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass CollectionItemModel{\r\n    constructor(\r\n        Id = uuidv4(),\r\n        ItemName = \"\",\r\n        ItemDescription = \"\",\r\n        Price = 0,\r\n        URL = \"\",\r\n        FavoriteCount = 0,\r\n        Gender = \"\",\r\n        TotalRatingCount = 0,\r\n        AverageRating = 0.0,\r\n        TotalCommentCount = 0,\r\n        MerchantName = \"\",\r\n        MerchantOfficialName = \"\",\r\n        Images = []\r\n    ){\r\n        this.Id = Id;\r\n        this.Images = Images;\r\n        this.ItemName = ItemName;\r\n        this.ItemDescription = ItemDescription;\r\n        this.Price = Price;\r\n        this.URL = URL;\r\n        this.FavoriteCount = FavoriteCount;\r\n        this.Gender = Gender;\r\n        this.TotalRatingCount = TotalRatingCount;\r\n        this.AverageRating = AverageRating;\r\n        this.TotalCommentCount = TotalCommentCount;\r\n        this.MerchantName = MerchantName;\r\n        this.MerchantOfficialName = MerchantOfficialName;\r\n    }\r\n}\r\n\r\nexport default CollectionItemModel;","\r\nclass CampaignModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        startDate = new Date(),\r\n        endDate = new Date(),\r\n        isMultipleSupplied = false,\r\n        stockTypeId = 0,\r\n        url = \"\",\r\n        showTimer = false\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.startDate = startDate;\r\n        this.endDate = endDate;\r\n        this.isMultipleSupplied = isMultipleSupplied;\r\n        this.stockTypeId = stockTypeId;\r\n        this.url = url;\r\n        this.showTimer = showTimer;\r\n    }\r\n}\r\n\r\nexport default CampaignModel;","\r\nclass CategoryModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        hierarchy = \"\",\r\n        refundable = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.hierarchy = hierarchy;\r\n        this.refundable = refundable;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default CategoryModel;","\r\nclass BrandModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        isVirtual = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.isVirtual = isVirtual;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default BrandModel;","\r\nclass MetaBrandModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        isVirtual = false,\r\n        beautifiedName = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.isVirtual = isVirtual;\r\n        this.beautifiedName = beautifiedName;          \r\n    }\r\n}\r\n\r\nexport default MetaBrandModel;","\r\nclass GenderModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport default GenderModel;","\r\nclass PricetemModel{\r\n    constructor(\r\n        text = 0,\r\n        value = 0.0,\r\n    ){\r\n        this.text = text;\r\n        this.value = value;\r\n    }\r\n}\r\n\r\nexport default PricetemModel;","import PricetemModel from './PricetemModel';\r\n\r\nclass PriceModel{\r\n    constructor(\r\n        profitMargin = 0,\r\n        discountedPrice = new PricetemModel(),\r\n        sellingPrice = new PricetemModel(),\r\n        originalPrice = new PricetemModel(),\r\n        currency = \"\"\r\n    ){\r\n        this.profitMargin = profitMargin;\r\n        this.discountedPrice = discountedPrice;\r\n        this.sellingPrice = sellingPrice;\r\n        this.originalPrice = originalPrice;\r\n        this.currency = currency;\r\n    }\r\n}\r\n\r\nexport default PriceModel;","\r\nclass MerchantModel{\r\n    constructor(\r\n        id = 0,\r\n        name = \"\",\r\n        officialName = \"\",\r\n        cityName = \"\",\r\n        taxNumber = \"\"\r\n    ){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.officialName = officialName;\r\n        this.cityName = cityName;\r\n        this.taxNumber = taxNumber;\r\n    }\r\n}\r\n\r\nexport default MerchantModel;","\r\nclass DeliveryInformationModel{\r\n    constructor(\r\n        isRushDelivery = false,\r\n        deliveryDate = new Date(),\r\n    ){\r\n        this.isRushDelivery = isRushDelivery;\r\n        this.deliveryDate = deliveryDate;\r\n    }\r\n}\r\n\r\nexport default DeliveryInformationModel;","\r\nclass RatingScoreModel{\r\n    constructor(\r\n        averageRating = 0.0,\r\n        totalRatingCount = 0,\r\n        totalCommentCount = 0\r\n    ){\r\n        this.averageRating = averageRating;\r\n        this.totalRatingCount = totalRatingCount;\r\n        this.totalCommentCount = totalCommentCount;\r\n    }\r\n}\r\n\r\nexport default RatingScoreModel;","\r\nclass BreadcrumbItemModel{\r\n    constructor(\r\n        name = \"\",\r\n        path = \"\",\r\n        type = \"\"\r\n    ){\r\n        this.name = name;\r\n        this.path = path;\r\n        this.type = type;\r\n    }\r\n}\r\n\r\nexport default BreadcrumbItemModel;","import BreadcrumbItemModel from \"./BreadcrumbItemModel\";\r\n\r\nclass BreadcrumbModel{\r\n    constructor(\r\n        items = [BreadcrumbItemModel],\r\n    ){\r\n        this.items = items;\r\n    }\r\n}\r\n\r\nexport default BreadcrumbModel;","import CampaignModel from './CampaignModel';\r\nimport CategoryModel from './CategoryModel';\r\nimport BrandModel from './BrandModel';\r\nimport MetaBrandModel from './MetaBrandModel';\r\nimport GenderModel from './GenderModel';\r\nimport PriceModel from './PriceModel';\r\nimport MerchantModel from './MerchantModel';\r\nimport DeliveryInformationModel from './DeliveryInformationModel';\r\nimport RatingScoreModel from './RatingScoreModel';\r\nimport BreadcrumbModel from './BreadcrumbModel';\r\n\r\nclass ProductModel{\r\n    constructor(\r\n        id = 0 ,\r\n        attributes = [],\r\n        alternativeVariants = [],\r\n        variants = [],\r\n        otherMerchants = [],\r\n        campaign = new CampaignModel(),\r\n        category = new CategoryModel(),\r\n        brand = new BrandModel(),\r\n        color = \"\",\r\n        showVariants = false,\r\n        showSexualContent = false,\r\n        metaBrand = new MetaBrandModel(),\r\n        productCode = \"\",\r\n        name = \"\",\r\n        nameWithProductCode = \"\",\r\n        description = \"\",\r\n        productGroupId = 0,\r\n        tax = 0,\r\n        businessUnit = \"\",\r\n        gender = new GenderModel(),\r\n        url = \"\",\r\n        images = [],\r\n        isSellable = false,\r\n        isBasketDiscount = false,\r\n        hasStock = false,\r\n        price = new PriceModel(),\r\n        isFreeCargo = false,\r\n        promotions = [],\r\n        merchant = new MerchantModel(),\r\n        deliveryInformation = new DeliveryInformationModel(),\r\n        isMarketplace = false,        productStamps = [],\r\n        hasHtmlContent = false,\r\n        favoriteCount = 0,\r\n        uxLayout = \"\",\r\n        isDigitalGood = false,\r\n        isRunningOut = false,\r\n        scheduledDelivery = false,\r\n        ratingScore = new RatingScoreModel(),\r\n        showStarredAttributes = false,\r\n        reviewsUrl = \"\",\r\n        breadcrumb = new BreadcrumbModel()\r\n    ){\r\n        this.id = id;\r\n        this.attributes = attributes;\r\n        this.alternativeVariants = alternativeVariants;\r\n        this.variants = variants;        \r\n        this.otherMerchants = otherMerchants;\r\n        this.campaign = campaign;\r\n        this.category = category;\r\n        this.brand = brand;\r\n        this.color = color;\r\n        this.showVariants = showVariants;\r\n        this.showSexualContent = showSexualContent;\r\n        this.metaBrand = metaBrand;\r\n        this.productCode = productCode;\r\n        this.name = name;\r\n        this.nameWithProductCode = nameWithProductCode;\r\n        this.description = description;\r\n        this.productGroupId = productGroupId;\r\n        this.tax = tax;\r\n        this.businessUnit = businessUnit;\r\n        this.gender = gender;        \r\n        this.url = url;\r\n        this.images = images;\r\n        this.isSellable = isSellable;\r\n        this.isBasketDiscount = isBasketDiscount;\r\n        this.hasStock = hasStock;\r\n        this.price = price;\r\n        this.isFreeCargo = isFreeCargo;\r\n        this.promotions = promotions;\r\n        this.merchant = merchant;\r\n        this.deliveryInformation = deliveryInformation;\r\n        this.isMarketplace = isMarketplace;\r\n        this.productStamps = productStamps;         \r\n        this.hasHtmlContent = hasHtmlContent;\r\n        this.favoriteCount = favoriteCount;\r\n        this.uxLayout = uxLayout;\r\n        this.isDigitalGood = isDigitalGood;        \r\n        this.isRunningOut = isRunningOut;\r\n        this.scheduledDelivery = scheduledDelivery;\r\n        this.ratingScore = ratingScore;\r\n        this.showStarredAttributes = showStarredAttributes;\r\n        this.reviewsUrl = reviewsUrl;\r\n        this.breadcrumb = breadcrumb;                             \r\n    }\r\n}\r\n\r\nexport default ProductModel;","import ProductModel from \"./ProductModel\";\r\n\r\nclass TrendyolModel{\r\n    constructor(\r\n        product = new ProductModel(),\r\n        htmlContent = null,\r\n        user = null,\r\n        configuration = null\r\n    ){\r\n        this.product = product;\r\n        this.htmlContent = htmlContent;\r\n        this.user = user;\r\n        this.configuration = configuration;\r\n    }\r\n}\r\n\r\nexport default TrendyolModel;","import React, { Component } from 'react';\r\nimport { withStyles,createMuiTheme } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Detail from './Detail';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { selectedTodo } from \"../Redux/ReduxActions\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AccordionActions from '@material-ui/core/AccordionActions';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Zoom from 'react-medium-image-zoom';\r\nimport 'react-medium-image-zoom/dist/styles.css';\r\n\r\nimport ItemImagesModel from '../Models/ItemImagesModel';\r\nimport CollectionItemModel from '../Models/CollectionItemModel';\r\nimport { updateCollection, saveCollection } from \"../Redux/ReduxActions\";\r\n\r\nimport TrendyolModel from '../TrenyolModels/TrendyolModel';\r\n\r\nconst theme = createMuiTheme();\r\nconst useStyles = {\r\n    root:{\r\n        flexGrow: \"1\",\r\n        marginTop :\"30px\"\r\n    },\r\n    list: {\r\n      width: '100%',\r\n    },\r\n    li_item_tag:{\r\n        height: \"20px\",\r\n        padding: \"4px 8px\",\r\n        fontSize: \"10px\",\r\n        minWidth: \"20px\",\r\n        alignItems: \"center\",\r\n        lineHeight: \"10px\",\r\n        borderRadius: \"2px\",\r\n        marginLeft : \"10px\"\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n        color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n        background:'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },    \r\n    paper:{\r\n        flexGrow : \"1\",\r\n        height : \"80px\",\r\n        weight : \"50px\"\r\n    },\r\n    slide:{\r\n        display: \"flex\",  \r\n        flexDirection :\"column\"      \r\n    },\r\n    ImageStyle:{\r\n        height :\"100%\",\r\n        weight:\"100%\"\r\n    },\r\n    column: {\r\n        flexBasis: '33.33%',\r\n    },\r\n  };\r\n\r\nexport class TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            Link : \"\",\r\n            DetailOpen : false\r\n        }\r\n    }\r\n\r\n    \r\n    handleDetailClose=()=>{\r\n        this.setState({DetailOpen:false});\r\n    }\r\n\r\n    handleChangeLinkText=(e)=>{\r\n        this.setState({Link:e.target.value});\r\n    }\r\n    handleAddCollectionItem=(e)=>{\r\n        const herokuHttps = \"https://cors-anywhere.herokuapp.com/\";\r\n        \r\n        // const request = require('request');\r\n        // request(herokuHttps+this.state.Link, function (error, response, body) {\r\n        //   console.error('error:', error); // Print the error if one occurred\r\n        //   console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\r\n        //   console.log('body:', body); // Print the HTML for the Google homepage.\r\n        // });\r\n\r\n        \r\n        // var quizUrl = herokuHttps+this.state.Link;\r\n        // fetch(quizUrl).then(function(response) {\r\n        //     return response.text()\r\n        // })\r\n        // .then((text)=>{\r\n        //     console.log(text);\r\n        //     let response = document.createElement('html');\r\n        //     response.innerHTML = text;\r\n\r\n        //     let TempCollection = {...this.props.MyCollection};\r\n        //     let NewItem = new CollectionItemModel();\r\n        //     let ItemElement = Array.from(response.getElementsByTagName(\"h1\"))[0];\r\n\r\n        //     NewItem.ItemName = ItemElement.firstElementChild.innerText;\r\n        //     NewItem.ItemDescription = ItemElement.innerText;\r\n        //     NewItem.URL = this.state.Link;\r\n        //     NewItem.Price = 523.23;\r\n\r\n        //     // let Images = Array.from(response.images);\r\n        //     // console.log(Images);\r\n        //     // Promise.all(Images.map((data)=>{\r\n        //     //     console.log(data);\r\n        //     //     if(data.alt === \"gallery image\"){\r\n        //     //         let NewImage = new ItemImagesModel();\r\n        //     //         let Dom =  document.createElement( 'html' );\r\n        //     //         Dom.innerHTML = data.outerHTML;\r\n        //     //         NewImage.URL = Dom.getElementsByTagName(\"img\")[0].getAttribute('lazy'); \r\n        //     //         NewImage.HtmlContent = data.outerHTML;\r\n        //     //         NewItem.Images.push(NewImage);\r\n        //     //     }\r\n        //     // }));\r\n\r\n        //     // TempCollection.CollectionItems.push(NewItem);\r\n        //     // this.props.updateCollection(TempCollection);            \r\n        //     this.setState({Link:\"\"});            \r\n        // })\r\n        // .catch(function(err) {\r\n        //     console.log(err) // this won't trigger because there is no actual error\r\n        // });\r\n\r\n        this.getHTML(this.state.Link,(response)=>{\r\n            let ScriptsArray =Array.from(response.getElementsByTagName(\"script\"));\r\n            let JSONData = ScriptsArray.find(x=>x.innerText.indexOf(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__\")!==-1).innerText.trim().substring(\"window.__PRODUCT_DETAIL_APP_INITIAL_STATE__ =\".length);\r\n            JSONData = JSONData.substring(0,JSONData.length-1);\r\n            let NewTrendyolModel = new TrendyolModel();\r\n            console.log(Object.assign(NewTrendyolModel,JSON.parse(JSONData)));\r\n            \r\n            let TempCollection = {...this.props.MyCollection};\r\n            let NewItem = new CollectionItemModel();\r\n\r\n            NewItem.ItemName = NewTrendyolModel.product.productCode;\r\n            NewItem.ItemDescription = NewTrendyolModel.product.name;\r\n            NewItem.URL = this.state.Link;\r\n            NewItem.Price = NewTrendyolModel.product.price.sellingPrice.value;\r\n            NewItem.Gender = NewTrendyolModel.product.gender.name;\r\n            NewItem.FavoriteCount = NewTrendyolModel.product.favoriteCount;\r\n            NewItem.TotalRatingCount = NewTrendyolModel.product.ratingScore.totalRatingCount;\r\n            NewItem.TotalCommentCount = NewTrendyolModel.product.ratingScore.totalCommentCount;\r\n            NewItem.AverageRating = NewTrendyolModel.product.ratingScore.averageRating;\r\n            NewItem.MerchantName = NewTrendyolModel.product.merchant.name;\r\n            NewItem.MerchantOfficialName = NewTrendyolModel.product.merchant.officialName;\r\n\r\n            NewTrendyolModel.product.images.map((data)=>{\r\n                let NewImage = new ItemImagesModel();\r\n                NewImage.URL = \"https://cdn.dsmcdn.com/\"+data; \r\n                NewImage.HtmlContent = \"\";\r\n                NewItem.Images.push(NewImage);\r\n            })\r\n\r\n            TempCollection.CollectionItems.push(NewItem);\r\n            this.props.updateCollection(TempCollection);            \r\n            this.setState({Link:\"\"});\r\n        });\r\n    }\r\n\r\n    handleDeleteCollectionItem=(e,p)=>{\r\n        e.preventDefault();\r\n\r\n        let TempCollection = {...this.props.MyCollection};\r\n        let EntryIndex = TempCollection.CollectionItems.map((e)=> { return e.Id }).indexOf(p);\r\n        if (EntryIndex !== -1) {\r\n            TempCollection.CollectionItems.splice(EntryIndex, 1);\r\n            this.props.updateCollection(TempCollection);\r\n        }\r\n    }\r\n\r\n    handleOpenLink=(e,p)=>{\r\n        e.preventDefault();\r\n        window.open(p);\r\n    }\r\n\r\n    handleOpenTodo=(e,p)=>{\r\n        e.preventDefault();\r\n        // let FilteredTodoList = this.props.TodoLists.Todolists.find((value)=>{return value.Id.match(p)});\r\n        // let TempTodos =Object.assign(new TodoListModel(),FilteredTodoList);\r\n        // if(TempTodos != null || TempTodos.length > 0){\r\n        //     this.props.selectedTodo(TempTodos);\r\n        // }\r\n        // this.setState({DetailOpen:true});\r\n    }\r\n\r\n    getHTML = ( url, callback ) => {\r\n\r\n        const herokuHttps = \"https://cors-anywhere.herokuapp.com/\";\r\n        // Feature detection\r\n        if ( !window.XMLHttpRequest ) return;\r\n    \r\n        // Create new request\r\n        var xhr = new XMLHttpRequest();\r\n    \r\n        // Setup callback\r\n        xhr.onload = function() {\r\n            if ( callback && typeof( callback ) === 'function' ) {\r\n                callback( this.responseXML );\r\n            }\r\n        }\r\n    \r\n        // Get the HTML\r\n        xhr.open( 'GET',herokuHttps+ url );\r\n        xhr.responseType = 'document';\r\n        xhr.send();\r\n    \r\n    };    \r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <Container maxWidth=\"md\">\r\n                    <TextField\r\n                        id=\"Assinged-Hotkey-2\"\r\n                        placeholder=\"Eklenmesini istediğiniz ürünün linki ... \"\r\n                        fullWidth                        \r\n                        InputProps={{\r\n                            endAdornment: \r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton onClick={this.handleAddCollectionItem}>\r\n                                    <AddIcon/>\r\n                                </IconButton>                                \r\n                            </InputAdornment>,\r\n                          }}\r\n                        onChange={(e)=>this.handleChangeLinkText(e)}\r\n                        value={this.state.Link}\r\n                    />   \r\n                    <List className={classes.list}>\r\n                        {\r\n                            this.props.MyCollection.CollectionItems != null ? \r\n                            this.props.MyCollection.CollectionItems.map(Item=>{\r\n                                return (\r\n                                    <Accordion>\r\n                                        <AccordionSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-label=\"Expand\"\r\n                                            aria-controls=\"additional-actions1-content\"\r\n                                            id=\"additional-actions1-header\"\r\n                                            onClick={this.handleOpenMail}\r\n                                        >\r\n                                            <Typography>{Item.ItemName}</Typography>\r\n                                            <Typography color=\"secondary\">\r\n                                                {\" — \"+Item.ItemDescription}\r\n                                            </Typography>\r\n                                        </AccordionSummary>\r\n                                        <AccordionDetails>\r\n                                            <div className={classes.slide}>\r\n                                                <div>\r\n                                                    <div className={classes.column}>\r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            {Item.FavoriteCount} Kişinin favorisi\r\n                                                        </Typography>  \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Satıcı Adı: {Item.MerchantName}\r\n                                                        </Typography>    \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Resmi Adı: {Item.MerchantOfficialName}\r\n                                                        </Typography>                                                                                                         \r\n                                                    </div>\r\n                                                    <div className={classes.column}>\r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Fiyatı : {Item.Price}\r\n                                                        </Typography>  \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Toplam Değerlendirme : {Item.TotalRatingCount}\r\n                                                        </Typography>      \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            Toplam Yorum : {Item.TotalCommentCount}\r\n                                                        </Typography>   \r\n                                                        <Typography color=\"textSecondary\">\r\n                                                            5 Üzerinden Değerlendirme  : {Item.AverageRating}\r\n                                                        </Typography>                                                                                                                                                                      \r\n                                                    </div>                                                \r\n                                                </div>                                          \r\n                                                {                  \r\n                                                    <GridList className={classes.gridList} cols={2.5}>\r\n                                                        {Item.Images.map((Img)=>{\r\n                                                            return(\r\n                                                            <GridListTile key={Img.Id} style={{width:\"50px\" , height:\"80px\"}}>\r\n                                                                <Zoom>\r\n                                                                    <img\r\n                                                                        style={{width:\"100%\" , height:\"100%\"}}\r\n                                                                        alt={Img.Id}\r\n                                                                        src={Img.URL}\r\n                                                                    />\r\n                                                                </Zoom>\r\n\r\n                                                            </GridListTile>)\r\n                                                        })}\r\n                                                    </GridList>                                                                                \r\n                                                }                                        \r\n                                            </div>                                          \r\n                                        </AccordionDetails>\r\n                                        <Divider />\r\n                                        <AccordionActions>\r\n                                          <Button size=\"small\" onClick={(e,p)=>this.handleOpenLink(e,Item.URL)}>Ürüne Git</Button>\r\n                                          <Button size=\"small\" color=\"secondary\" onClick={(e,p)=>this.handleDeleteCollectionItem(e,Item.Id)}>\r\n                                            Sil\r\n                                          </Button>\r\n                                        </AccordionActions>                                        \r\n                                    </Accordion>\r\n                                )\r\n                            })\r\n                            : \"\"\r\n                        }\r\n                    </List>\r\n                    <Detail open={this.state.DetailOpen} handleClose={this.handleDetailClose}></Detail>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { MyCollection: state.MyCollection };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCollection: Todos => dispatch(updateCollection(Todos)),\r\n        saveCollection: Todos => dispatch(saveCollection(Todos))\r\n    }\r\n}\r\n\r\nconst TodoListComponent = withStyles(useStyles)(TodoList);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListComponent)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Header from './Header';\r\nimport TodoList from './TodoList';\r\n\r\nconst useStyles = {\r\n    lvl1:{\r\n        display: \"flex\",\r\n        \r\n    },\r\n    lvl2:{\r\n        flexGrow: \"1\",\r\n        maxWidth: \"100%\",\r\n        overflowX: \"hidden\"\r\n    },\r\n    lvl3:{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        overflow: \"hidden\",\r\n        transition: \"transform 195ms\",\r\n        minHeight: \"95vh\"\r\n    }\r\n};\r\n\r\nexport class Main extends Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <div className={classes.lvl1}>\r\n                <div className={classes.lvl2}>                       \r\n                    <div className={classes.lvl3}>                            \r\n                        <Header handleOpen={this.handleOpen}></Header>\r\n                        <TodoList handleOpen={this.handleDetailOpen}></TodoList>                        \r\n                    </div>\r\n                </div>          \r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nconst MainComponent = withStyles(useStyles)(Main);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport {createMuiTheme} from \"@material-ui/core\";\r\nimport Main from './Components/Main';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport * as colors from \"@material-ui/core/colors\";\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     type: \"dark\",\r\n//   },\r\n//   overrides: {\r\n//     MuiDrawer: {\r\n//       paper: {\r\n//         backgroundColor: colors.grey[900],\r\n//         color: colors.grey[100]\r\n//       }\r\n//     }\r\n//   }\r\n// });\r\n\r\nexport class App extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.state={\r\n      switchCheck:false,\r\n      theme : {\r\n        palette: {\r\n          type: \"light\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleDarkTheme = () => {\r\n    let newPaletteType = this.state.theme.palette.type === \"light\" ? \"dark\" : \"light\";\r\n    this.setState({\r\n      theme:{\r\n        palette: {\r\n          type: newPaletteType\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSwitchChange = (event) => {\r\n    this.toggleDarkTheme()\r\n    this.setState({switchCheck:event.target.checked});\r\n  };\r\n\r\n  componentDidMount(){\r\n   \r\n  }\r\n  \r\n  render() {\r\n    const muiTheme = createMuiTheme(this.state.theme);\r\n\r\n    return (\r\n      <ThemeProvider theme={muiTheme}>\r\n        <CssBaseline/>\r\n        <Switch\r\n          checked={this.state.switchCheck}\r\n          onChange={this.handleSwitchChange}\r\n        ></Switch>\r\n        <Main/> \r\n      </ThemeProvider> \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  \r\n})\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    UPDATE_COLLECTION_DATA,\r\n    READ_COLLECTION_DATA,\r\n    SAVE_COLLECTION_DATA\r\n}\r\nfrom './ReduxActionContants';\r\n\r\nimport CollectionsModel from '../Models/CollectionModel';\r\n\r\nconst initialState = {\r\n    MyCollection : new CollectionsModel()\r\n};\r\n\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch(action.type){\r\n        case UPDATE_COLLECTION_DATA:{\r\n            return {\r\n                ...state, MyCollection: action.payload\r\n            }\r\n        }\r\n        case READ_COLLECTION_DATA:{\r\n            return {\r\n                ...state, MyCollection: action.payload\r\n            }\r\n        }\r\n        case SAVE_COLLECTION_DATA:{\r\n            return {\r\n                ...state, MyCollection: action.payload\r\n            }\r\n        }   \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass CollectionsModel{\r\n    constructor(\r\n        Id = uuidv4(),\r\n        CollectionItems = []\r\n    ){\r\n        this.Id = Id;\r\n        this.CollectionItems = CollectionItems;\r\n    }\r\n}\r\n\r\nexport default CollectionsModel;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./ReduxReducer\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/ReduxStore\";\n\nReactDOM.render(\n  <Provider store={store}> \n      <App />\n  </Provider>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}